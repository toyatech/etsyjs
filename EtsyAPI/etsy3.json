{"BillPayment": {
  "description": "Represents a user's Billing Payment.This resource has no associations.",
  "fields": {
    "bill_payment_id": {
      "visibility": "private",
      "scope": "billing_r",
      "type": "int",
      "description": "The numeric ID for this bill payment record."
    },
    "creation_tsz": {
      "visibility": "private",
      "scope": "billing_r",
      "type": "float",
      "description": "Creation time, in epoch seconds."
    },
    "type": {
      "visibility": "private",
      "scope": "billing_r",
      "type": "string",
      "description": "The name of the type of payment."
    },
    "type_id": {
      "visibility": "private",
      "scope": "billing_r",
      "type": "int",
      "description": "The Listing or Transaction ID (or LedgerEntry ID in the case of a ledger payment) to which the payment applies."
    },
    "user_id": {
      "visibility": "private",
      "scope": "billing_r",
      "type": "int",
      "description": "The user's numeric ID."
    },
    "amount": {
      "visibility": "private",
      "scope": "billing_r",
      "type": "float",
      "description": "The amount paid."
    },
    "currency_code": {
      "visibility": "private",
      "scope": "billing_r",
      "type": "string",
      "description": "The currency of the payment."
    },
    "creation_month": {
      "visibility": "private",
      "scope": "billing_r",
      "type": "int",
      "description": "Month that the payment was made."
    },
    "creation_year": {
      "visibility": "private",
      "scope": "billing_r",
      "type": "int",
      "description": "Year that the payment was made."
    }
  },
  "associations": {},
  "methods": {
    "findAllUserPayments": {
      "description": "Retrieves a set of BillPayment objects associated to a User.",
      "method": "GET",
      "uri": "/users/:user_id/payments",
      "parameters": {
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "sort_order": {
          "required": false,
          "default": "up",
          "type": "enum(up, down)"
        },
        "min_created": {
          "required": false,
          "default": "",
          "type": "epoch"
        },
        "max_created": {
          "required": false,
          "default": "",
          "type": "epoch"
        }
      },
      "oauth": true,
      "scope": "billing_r"
    }
  }
},
"ApiMethod": {
  "description": "A method call from the Etsy API.This resource has no associations.",
  "fields": {
    "name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The method's descriptive name."
    },
    "uri": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The method's URI pattern.  Parameters are marked with a leading colon."
    },
    "params": {
      "visibility": "public",
      "scope": "none",
      "type": "ParamList",
      "description": "An array of method parameters and types."
    },
    "defaults": {
      "visibility": "public",
      "scope": "none",
      "type": "ParamList",
      "description": "An array of default values for parameters.  Parameters that lack a default are required."
    },
    "type": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The resource type returned by the method."
    },
    "visibility": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The method's visibility level.  Methods marked \"private\" require authentication."
    },
    "http_method": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The HTTP method used to call the API method."
    }
  },
  "associations": {},
  "methods": {
    "getMethodTable": {
      "description": "Get a list of all methods available.",
      "method": "GET",
      "uri": "/",
      "parameters": {},
      "oauth": false,
      "scope": "none"
    }
  }
},
"Cart": {
  "description": "Represents a shopping cart on Etsy. Users have one cart per shop.",
  "fields": {
    "cart_id": {
      "visibility": "private",
      "scope": "cart_rw",
      "type": "int",
      "description": "The numeric ID of the cart"
    },
    "shop_name": {
      "visibility": "private",
      "scope": "cart_rw",
      "type": "string",
      "description": "The shop name"
    },
    "message_to_seller": {
      "visibility": "private",
      "scope": "cart_rw",
      "type": "string",
      "description": "The message to the seller"
    },
    "destination_country_id": {
      "visibility": "private",
      "scope": "cart_rw",
      "type": "int",
      "description": "The numeric ID of the destination country"
    },
    "coupon_code": {
      "visibility": "private",
      "scope": "cart_rw",
      "type": "string",
      "description": "The alphanumeric coupon code applied to the cart"
    },
    "currency_code": {
      "visibility": "private",
      "scope": "cart_rw",
      "type": "string",
      "description": "The ISO (alphabetic) code for the currency"
    },
    "total": {
      "visibility": "private",
      "scope": "cart_rw",
      "type": "string",
      "description": "The total price"
    },
    "subtotal": {
      "visibility": "private",
      "scope": "cart_rw",
      "type": "string",
      "description": "The subtotal price"
    },
    "shipping_cost": {
      "visibility": "private",
      "scope": "cart_rw",
      "type": "string",
      "description": "The shipping cost"
    },
    "tax_cost": {
      "visibility": "private",
      "scope": "cart_rw",
      "type": "string",
      "description": "The tax cost"
    },
    "discount_amount": {
      "visibility": "private",
      "scope": "cart_rw",
      "type": "string",
      "description": "The line-item discount amount (does not include tax or shipping)"
    },
    "shipping_discount_amount": {
      "visibility": "private",
      "scope": "cart_rw",
      "type": "string",
      "description": "The shipping discount amount"
    },
    "tax_discount_amount": {
      "visibility": "private",
      "scope": "cart_rw",
      "type": "string",
      "description": "The tax discount amount"
    },
    "url": {
      "visibility": "private",
      "scope": "cart_rw",
      "type": "string",
      "description": "The full URL to the cart page on Etsy"
    },
    "listings": {
      "visibility": "private",
      "scope": "cart_rw",
      "type": "array(CartListing)",
      "description": "An array of purchase information for the listings"
    },
    "shipping_option": {
      "visibility": "private",
      "scope": "cart_rw",
      "type": "ShippingOption",
      "description": "The selected shipping option identifier for the cart"
    }
  },
  "associations": {
    "Shop": {
      "visibility": "private",
      "scope": "cart_rw",
      "type": "Shop",
      "description": "The shop"
    },
    "Listings": {
      "visibility": "private",
      "scope": "cart_rw",
      "type": "array(Listing)",
      "description": "An array of listings"
    },
    "Coupon": {
      "visibility": "private",
      "scope": "cart_rw",
      "type": "Coupon",
      "description": "The coupon applied to the cart"
    },
    "ShippingOptions": {
      "visibility": "private",
      "scope": "cart_rw",
      "type": "array(ShippingOption)",
      "description": "Available shipping options for the cart"
    }
  },
  "methods": {
    "getAllUserCarts": {
      "description": "Get a user's Carts",
      "method": "GET",
      "uri": "/users/:user_id/carts",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "limit": {
          "required": false,
          "default": "100",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "cart_rw"
    },
    "addToCart": {
      "description": "Add a listing to a cart",
      "method": "POST",
      "uri": "/users/:user_id/carts",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "quantity": {
          "required": false,
          "default": "1",
          "type": "int"
        },
        "selected_variations": {
          "required": false,
          "default": "",
          "type": "map(int, int)"
        }
      },
      "oauth": true,
      "scope": "cart_rw"
    },
    "updateCartListingQuantity": {
      "description": "Update a cart listing purchase quantity",
      "method": "PUT",
      "uri": "/users/:user_id/carts",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "quantity": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "listing_customization_id": {
          "required": false,
          "default": "0",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "cart_rw"
    },
    "removeCartListing": {
      "description": "Remove a listing from a cart",
      "method": "DELETE",
      "uri": "/users/:user_id/carts",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "listing_customization_id": {
          "required": false,
          "default": "0",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "cart_rw"
    },
    "getUserCart": {
      "description": "Get a cart",
      "method": "GET",
      "uri": "/users/:user_id/carts/:cart_id",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "cart_id": {
          "required": true,
          "default": "",
          "type": "cart_id"
        }
      },
      "oauth": true,
      "scope": "cart_rw"
    },
    "updateCart": {
      "description": "Update a cart",
      "method": "PUT",
      "uri": "/users/:user_id/carts/:cart_id",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "cart_id": {
          "required": true,
          "default": "",
          "type": "cart_id"
        },
        "destination_country_id": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "message_to_seller": {
          "required": false,
          "default": "",
          "type": "text"
        },
        "coupon_code": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "shipping_option_id": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "cart_rw"
    },
    "deleteCart": {
      "description": "Delete a cart",
      "method": "DELETE",
      "uri": "/users/:user_id/carts/:cart_id",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "cart_id": {
          "required": true,
          "default": "",
          "type": "cart_id"
        }
      },
      "oauth": true,
      "scope": "cart_rw"
    },
    "getUserCartForShop": {
      "description": "Get a cart from a shop ID",
      "method": "GET",
      "uri": "/users/:user_id/carts/shop/:shop_id",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        }
      },
      "oauth": true,
      "scope": "cart_rw"
    }
  }
},
"Avatar": {
  "description": "An Etsy member's avatar image.The ListingImage resource includes\nfields for the following sizes, which be officially supported by Etsy at least\nthrough the end of 2013:\nAdditional sizes are available but do not have specific fields in the\nresource. Instead, treat the full size URL as a template. Use the\n\nImageType methods to retrieve available sizes for listing images;\nany of these can be subsituted in place of \"fullxfull\" in the full size\nURL to make a new URL for the listing image of that size.The 570xN and fullxfull image sizes have variable dimensions depending on the original artwork uploaded by the seller:If the provided sizes don't suit your application, you are free to download the larger image sizes, resize and cache them for your own use, as long as you adhere to our API Terms of Use.Image uploads can be performed using a POST request with the Content-Type: multipart/form-dataheader, following RFC1867.  This is identical to using curl -F, except that that request needs to be signed using OAuth.Your OAuth toolkit must support multipart form uploads as described above.  Here is example code for PHP using the PECL OAuth 1.1 extension (PECL OAuth 1.0 will not work):This resource has no associations.",
  "fields": {
    "avatar_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID for this avatar image."
    },
    "hex_code": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The avatar' average RGB color, in webhex notation."
    },
    "red": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The avatar's average red channel (RGB color) value from 0-255."
    },
    "green": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The avatar's average green channel (RGB color) value from 0-255."
    },
    "blue": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The avatar's average blue channel (RGB color) value from 0-255."
    },
    "hue": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The avatar's average hue (HSV color) from 0-360."
    },
    "saturation": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The avatar's average saturation (HSV color) from 0-100."
    },
    "brightness": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The avatar's average brightness (HSV color) from 0-100."
    },
    "is_black_and_white": {
      "visibility": "public",
      "scope": "none",
      "type": "boolean",
      "description": "True if the avatar is a black and white image."
    },
    "creation_tsz": {
      "visibility": "public",
      "scope": "none",
      "type": "float",
      "description": "The time that the avatar was uploaded."
    },
    "user_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of the user who owns the avatar."
    }
  },
  "associations": {},
  "methods": {
    "uploadAvatar": {
      "description": "Upload a new user avatar image",
      "method": "POST",
      "uri": "/users/:user_id/avatar",
      "parameters": {
        "src": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "image": {
          "required": false,
          "default": "",
          "type": "image"
        }
      },
      "oauth": true,
      "scope": "profile_w"
    },
    "getAvatarImgSrc": {
      "description": "Get avatar image source",
      "method": "GET",
      "uri": "/users/:user_id/avatar/src",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        }
      },
      "oauth": false,
      "scope": "none"
    }
  }
},
"CartListing": {
  "description": "Represents the purchase quantity and state for a cart listing.This resource has no associations.This resource has no methods.",
  "fields": {
    "listing_id": {
      "visibility": "private",
      "scope": "cart_rw",
      "type": "int",
      "description": "The numeric ID of the listing"
    },
    "purchase_quantity": {
      "visibility": "private",
      "scope": "cart_rw",
      "type": "int",
      "description": "The quantity of the listing being purchased"
    },
    "purchase_state": {
      "visibility": "private",
      "scope": "cart_rw",
      "type": "string",
      "description": "The purchase state of the listing, possible values: valid, invalid_quantity, invalid_shipping, not_active, edited, invalid_currency, invalid_shipping_currency"
    },
    "is_digital": {
      "visibility": "private",
      "scope": "cart_rw",
      "type": "boolean",
      "description": "True if this listing is for a digital download."
    },
    "file_data": {
      "visibility": "private",
      "scope": "cart_rw",
      "type": "string",
      "description": "Written description of the files attached to this digital listing."
    },
    "listing_customization_id": {
      "visibility": "private",
      "scope": "cart_rw",
      "type": "int",
      "description": "When Variations are present on a listing, this can be used to differentiate multiple instances of the same listing."
    },
    "variations_available": {
      "visibility": "private",
      "scope": "cart_rw",
      "type": "boolean",
      "description": "Whether Variations are available for this listing."
    },
    "has_variations": {
      "visibility": "private",
      "scope": "cart_rw",
      "type": "boolean",
      "description": "Whether the buyer selected Variations for this listing."
    },
    "selected_variations": {
      "visibility": "private",
      "scope": "cart_rw",
      "type": "array(Variations_SelectedProperty)",
      "description": "An array of selected Variations for this listing."
    }
  },
  "associations": {},
  "methods": {}
},
"Category": {
  "description": "A categoryThis resource has no associations.",
  "fields": {
    "category_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The identifier for this category."
    },
    "name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The programmatic name for this category."
    },
    "meta_title": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The \"title\" meta tag value for the category's landing page (may be null)."
    },
    "meta_keywords": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The \"keywords\" meta tag value for the category's landing page (may be null)."
    },
    "meta_description": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The \"description\" meta tag value for the category's landing page (may be null)."
    },
    "page_description": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "A short description of the category from the category' landing page (may be null)."
    },
    "page_title": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The title of the category's landing page (may be null)."
    },
    "category_name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The category's string ID."
    },
    "short_name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "A short display name for the category."
    },
    "long_name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "A longer display name for the category."
    },
    "num_children": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The number of subcategories below this one. Subcatgories append a new tag to the end of their parent's category_name."
    }
  },
  "associations": {},
  "methods": {
    "getCategory": {
      "description": "Retrieves a top-level Category by tag.",
      "method": "GET",
      "uri": "/categories/:tag",
      "parameters": {
        "tag": {
          "required": true,
          "default": "",
          "type": "string"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "findAllTopCategory": {
      "description": "Retrieves all top-level Categories.",
      "method": "GET",
      "uri": "/taxonomy/categories",
      "parameters": {},
      "oauth": false,
      "scope": "none"
    },
    "getSubCategory": {
      "description": "Retrieves a second-level Category by tag and subtag.",
      "method": "GET",
      "uri": "/categories/:tag/:subtag",
      "parameters": {
        "tag": {
          "required": true,
          "default": "",
          "type": "string"
        },
        "subtag": {
          "required": true,
          "default": "",
          "type": "string"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "getSubSubCategory": {
      "description": "Retrieves a third-level Category by tag, subtag and subsubtag.",
      "method": "GET",
      "uri": "/categories/:tag/:subtag/:subsubtag",
      "parameters": {
        "tag": {
          "required": true,
          "default": "",
          "type": "string"
        },
        "subtag": {
          "required": true,
          "default": "",
          "type": "string"
        },
        "subsubtag": {
          "required": true,
          "default": "",
          "type": "string"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "findAllTopCategoryChildren": {
      "description": "Retrieves children of a top-level Category by tag.",
      "method": "GET",
      "uri": "/taxonomy/categories/:tag",
      "parameters": {
        "tag": {
          "required": true,
          "default": "",
          "type": "string"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "findAllSubCategoryChildren": {
      "description": "Retrieves children of a second-level Category by tag and subtag.",
      "method": "GET",
      "uri": "/taxonomy/categories/:tag/:subtag",
      "parameters": {
        "tag": {
          "required": true,
          "default": "",
          "type": "string"
        },
        "subtag": {
          "required": true,
          "default": "",
          "type": "string"
        }
      },
      "oauth": false,
      "scope": "none"
    }
  }
},
"Country": {
  "description": "Represents a geographical country and its location.This resource has no associations.",
  "fields": {
    "country_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The country's numeric ID."
    },
    "iso_country_code": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The two-letter country code according to ISO 3166-1-alpha-2."
    },
    "world_bank_country_code": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The three-letter country code according to the World Bank."
    },
    "name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The country's plain-English name."
    },
    "slug": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The country's plain-English name slugified; suitable for interpolation into a url."
    },
    "lat": {
      "visibility": "public",
      "scope": "none",
      "type": "float",
      "description": "The country's latitude."
    },
    "lon": {
      "visibility": "public",
      "scope": "none",
      "type": "float",
      "description": "The country's longitude."
    }
  },
  "associations": {},
  "methods": {
    "findAllCountry": {
      "description": "Finds all Country.",
      "method": "GET",
      "uri": "/countries",
      "parameters": {},
      "oauth": false,
      "scope": "none"
    },
    "getCountry": {
      "description": "Retrieves a Country by id.",
      "method": "GET",
      "uri": "/countries/:country_id",
      "parameters": {
        "country_id": {
          "required": true,
          "default": "",
          "type": "array(int)"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "findByIsoCode": {
      "description": "Get the country info for the given ISO code.",
      "method": "GET",
      "uri": "/countries/iso/:iso_code",
      "parameters": {
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "iso_code": {
          "required": true,
          "default": "",
          "type": "string"
        }
      },
      "oauth": false,
      "scope": "none"
    }
  }
},
"Coupon": {
  "description": "Represents a shop coupon.This resource has no associations.",
  "fields": {
    "coupon_id": {
      "visibility": "private",
      "scope": "shops_rw",
      "type": "int",
      "description": "The numeric ID of the coupon"
    },
    "coupon_code": {
      "visibility": "private",
      "scope": "shops_rw",
      "type": "string",
      "description": "The alphanumeric coupon code"
    },
    "seller_active": {
      "visibility": "private",
      "scope": "shops_rw",
      "type": "boolean",
      "description": "True if the coupon is active"
    },
    "pct_discount": {
      "visibility": "private",
      "scope": "shops_rw",
      "type": "int",
      "description": "The discount percent (null for free shipping coupons)"
    },
    "free_shipping": {
      "visibility": "private",
      "scope": "shops_rw",
      "type": "boolean",
      "description": "True if the coupon applies free shipping"
    },
    "domestic_only": {
      "visibility": "private",
      "scope": "shops_rw",
      "type": "boolean",
      "description": "True if the coupon free shipping applies to domestic addresses only"
    },
    "currency_code": {
      "visibility": "private",
      "scope": "shops_rw",
      "type": "string",
      "description": "The 3 letter currency code relating to currency values if any. fixed_discount or minimum_purchase_price"
    },
    "fixed_discount": {
      "visibility": "private",
      "scope": "shops_rw",
      "type": "string",
      "description": "Discount amount the coupon should take. For currency information see currency_code"
    },
    "minimum_purchase_price": {
      "visibility": "private",
      "scope": "shops_rw",
      "type": "string",
      "description": "The minimum amount in a cart before tax or shipping needed in order to apply the coupon. For currency information see currency_code"
    },
    "expiration_date": {
      "visibility": "private",
      "scope": "shops_rw",
      "type": "int",
      "description": "A epoch time (UTC) on which the coupon can no longer be applied"
    },
    "coupon_type": {
      "visibility": "private",
      "scope": "shops_rw",
      "type": "string",
      "description": "The type of coupon: fixed_discount, pct_discount, free_shipping for example"
    }
  },
  "associations": {},
  "methods": {
    "findAllShopCoupons": {
      "description": "Retrieves all Shop_Coupons by shop_id",
      "method": "GET",
      "uri": "/shops/:shop_id/coupons",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        }
      },
      "oauth": true,
      "scope": "shops_rw"
    },
    "createCoupon": {
      "description": "Creates a new Coupon. May only have one of free_shipping, pct_discount or fixed_discount",
      "method": "POST",
      "uri": "/shops/:shop_id/coupons",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "coupon_code": {
          "required": true,
          "default": "",
          "type": "string"
        },
        "pct_discount": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "seller_active": {
          "required": false,
          "default": "false",
          "type": "boolean"
        },
        "free_shipping": {
          "required": false,
          "default": "false",
          "type": "boolean"
        },
        "domestic_only": {
          "required": false,
          "default": "false",
          "type": "boolean"
        },
        "currency_code": {
          "required": false,
          "default": "USD",
          "type": "string"
        },
        "fixed_discount": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "minimum_purchase_price": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "expiration_date": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "shops_rw"
    },
    "findCoupon": {
      "description": "Retrieves a Shop_Coupon by id and shop_id",
      "method": "GET",
      "uri": "/shops/:shop_id/coupons/:coupon_id",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "coupon_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "shops_rw"
    },
    "updateCoupon": {
      "description": "Updates a coupon",
      "method": "PUT",
      "uri": "/shops/:shop_id/coupons/:coupon_id",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "coupon_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "seller_active": {
          "required": false,
          "default": "false",
          "type": "boolean"
        }
      },
      "oauth": true,
      "scope": "shops_rw"
    },
    "deleteCoupon": {
      "description": "Deletes a coupon",
      "method": "DELETE",
      "uri": "/shops/:shop_id/coupons/:coupon_id",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "coupon_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "shops_rw"
    }
  }
},
"DataType": {
  "description": "Describes an input type.This resource has no associations.",
  "fields": {
    "type": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Base type of data"
    },
    "values": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Allowable values (for an enum.)"
    }
  },
  "associations": {},
  "methods": {
    "describeOccasionEnum": {
      "description": "Describes the legal values for Listing.occasion.",
      "method": "GET",
      "uri": "/types/enum/occasion",
      "parameters": {},
      "oauth": false,
      "scope": "none"
    },
    "describeRecipientEnum": {
      "description": "Describes the legal values for Listing.recipient.",
      "method": "GET",
      "uri": "/types/enum/recipient",
      "parameters": {},
      "oauth": false,
      "scope": "none"
    },
    "describeWhenMadeEnum": {
      "description": "Describes the legal values for Listing.when_made.",
      "method": "GET",
      "uri": "/types/enum/when_made",
      "parameters": {
        "include_formatted": {
          "required": false,
          "default": "",
          "type": "boolean"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "describeWhoMadeEnum": {
      "description": "Describes the legal values for Listing.who_made.",
      "method": "GET",
      "uri": "/types/enum/who_made",
      "parameters": {},
      "oauth": false,
      "scope": "none"
    }
  }
},
"FavoriteListing": {
  "description": "Represents the association between a user and a listing they've marked as favorite.",
  "fields": {
    "listing_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The listings numeric ID."
    },
    "user_id": {
      "visibility": "public/private",
      "scope": "favorites_rw",
      "type": "int",
      "description": "The user's numeric ID.  Note: This field may be absent, depending on the user's privacy settings."
    },
    "listing_state": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The state of the listing."
    },
    "create_date": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The date and time that the listing was favorited."
    }
  },
  "associations": {
    "User": {
      "visibility": "public/private",
      "scope": "favorites_rw",
      "type": "User",
      "description": "The user who favorited the listing.  Note: This field may be absent, depending on the user's privacy settings."
    },
    "Listing": {
      "visibility": "public",
      "scope": "none",
      "type": "Listing",
      "description": "The favorited listing."
    }
  },
  "methods": {
    "findAllListingFavoredBy": {
      "description": "Retrieves a set of FavoriteListing objects associated to a Listing.",
      "method": "GET",
      "uri": "/listings/:listing_id/favored-by",
      "parameters": {
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "findAllUserFavoriteListings": {
      "description": "Finds all favorite listings for a user",
      "method": "GET",
      "uri": "/users/:user_id/favorites/listings",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "findUserFavoriteListings": {
      "description": "Finds a favorite listing for a user",
      "method": "GET",
      "uri": "/users/:user_id/favorites/listings/:listing_id",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "createUserFavoriteListings": {
      "description": "Creates a new favorite listing for a user",
      "method": "POST",
      "uri": "/users/:user_id/favorites/listings/:listing_id",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "favorites_rw"
    },
    "deleteUserFavoriteListings": {
      "description": "Delete a favorite listing for a user",
      "method": "DELETE",
      "uri": "/users/:user_id/favorites/listings/:listing_id",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "favorites_rw"
    }
  }
},
"FeaturedTreasury": {
  "description": "Represents a Treasury list featured on Etsy homepage.This resource has no associations.",
  "fields": {
    "treasury_key": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The string key to identify the Treasury"
    },
    "treasury_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID for this FeaturedTreasury."
    },
    "treasury_owner_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The user ID of the FeaturedTreasury owner."
    },
    "url": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The url to the FeaturedTreasury"
    },
    "region": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The region for which this FeaturedTreasury is active."
    },
    "active_date": {
      "visibility": "public",
      "scope": "none",
      "type": "float",
      "description": "The time this FeaturedTreasury is made active on the homepage"
    }
  },
  "associations": {},
  "methods": {
    "findAllFeaturedTreasuries": {
      "description": "Finds all FeaturedTreasuries.",
      "method": "GET",
      "uri": "/featured_treasuries",
      "parameters": {
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "region": {
          "required": false,
          "default": "__ALL_REGIONS__",
          "type": "region"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "getFeaturedTreasuryById": {
      "description": "Finds FeaturedTreasury by numeric ID.",
      "method": "GET",
      "uri": "/featured_treasuries/:featured_treasury_id",
      "parameters": {
        "featured_treasury_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "findAllFeaturedTreasuriesByOwner": {
      "description": "Finds all FeaturedTreasury by numeric owner_id.",
      "method": "GET",
      "uri": "/featured_treasuries/owner/:owner_id",
      "parameters": {
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "owner_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    }
  }
},
"FavoriteUser": {
  "description": "Represents the association between a user and another user they've marked as favorite.",
  "fields": {
    "user_id": {
      "visibility": "public/private",
      "scope": "favorites_rw",
      "type": "int",
      "description": "The user's numeric ID.  Note: This field may be absent, depending on the user's privacy settings."
    },
    "favorite_user_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numberic ID of this favorite user association.\n                            DEPRECATED: do not use."
    },
    "target_user_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The targeted favorite user's numeric ID."
    },
    "creation_tsz": {
      "visibility": "public",
      "scope": "none",
      "type": "float",
      "description": "The date and time that the user was favorited."
    }
  },
  "associations": {
    "User": {
      "visibility": "public/private",
      "scope": "favorites_rw",
      "type": "User",
      "description": "The user who marked the target user as a favorite.  Note: This field may be absent, depending on the user's privacy settings."
    },
    "TargetUser": {
      "visibility": "public",
      "scope": "none",
      "type": "User",
      "description": "The user who was marked as a favorite."
    }
  },
  "methods": {
    "findAllUserFavoredBy": {
      "description": "Retrieves a set of FavoriteUser objects associated to a User.",
      "method": "GET",
      "uri": "/users/:user_id/favored-by",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "findAllUserFavoriteUsers": {
      "description": "Finds all favorite users for a user",
      "method": "GET",
      "uri": "/users/:user_id/favorites/users",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "findUserFavoriteUsers": {
      "description": "Finds a favorite user for a user",
      "method": "GET",
      "uri": "/users/:user_id/favorites/users/:target_user_id",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "target_user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "createUserFavoriteUsers": {
      "description": "Creates a new favorite listing for a user",
      "method": "POST",
      "uri": "/users/:user_id/favorites/users/:target_user_id",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "target_user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        }
      },
      "oauth": true,
      "scope": "favorites_rw"
    },
    "deleteUserFavoriteUsers": {
      "description": "Delete a favorite listing for a user",
      "method": "DELETE",
      "uri": "/users/:user_id/favorites/users/:target_user_id",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "target_user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        }
      },
      "oauth": true,
      "scope": "favorites_rw"
    }
  }
},
"Feedback": {
  "description": "Etsy allows buyers and sellers to leave feedback for one another about a specific transaction.  Each feedback record contains a short message from the buyer or seller, a value of -1, 0 or 1, and information about the item that was purchased.Each feedback record has a buyer, a seller, an author, and a subject.  Because feedback is a two-way process, each transaction on Etsy can have up to two feedback records, one left by a buyer in reference to a seller, and one left by a seller in reference to a buyer.  To determine the context of a feedback record, you will neeed to examine both the creator_user_id and seller_user_id fields to determine whether the author of the feedback was the buyer or the seller in the transaction.As of March 14, 2011, all purchases on Etsy are hidden from public areas.  This has a direct effect on how feedback records are displayed in the API, since they contain information about a member's purchases.  Certain fields of feedback records are now treated as private--this means that they can only been seen using the private API, with either the buyer or seller's OAuth credentials.  If these conditions are not met, the fields will be missing from feedback responses.The context of the API request (whether you are requesting the buyer's or the seller's feedback) has an impact on which fields are considered private. In a nutshell:The following table gives detailed information on which feeds will be private in various contexts.  \"Feedback Author\" refers to the member who left the feedback (either the buyer, or the seller). \"Viewing Context\" refers to the member whose user ID was used to query the feedback (whether we are viewing feedback for the seller, or for the buyer).This table lists which fields fall under the general headings in the table above:",
  "fields": {
    "feedback_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The feedback record's numeric ID."
    },
    "transaction_id": {
      "visibility": "public/private",
      "scope": "feedback_r",
      "type": "int",
      "description": "The transaction's numeric ID."
    },
    "creator_user_id": {
      "visibility": "public/private",
      "scope": "feedback_r",
      "type": "int",
      "description": "The numeric ID of the user who wrote this feedback.  Note: This field may be absent, depending on the buyer's privacy settings."
    },
    "target_user_id": {
      "visibility": "public/private",
      "scope": "feedback_r",
      "type": "int",
      "description": "The numeric ID of the user who received this feedback.  Note: This field may be absent, depending on the buyer's privacy settings."
    },
    "seller_user_id": {
      "visibility": "public/private",
      "scope": "feedback_r",
      "type": "int",
      "description": "The numeric ID of the user who was the seller in this transaction."
    },
    "buyer_user_id": {
      "visibility": "public/private",
      "scope": "feedback_r",
      "type": "int",
      "description": "The numeric ID of the user who was the buyer in this transaction.  Note: This field may be absent, depending on the buyer's privacy settings."
    },
    "creation_tsz": {
      "visibility": "public",
      "scope": "none",
      "type": "float",
      "description": "Creation time, in epoch seconds."
    },
    "message": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "A message left by the author, explaining the feedback."
    },
    "value": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The feedback's value; 1 is positive, -1 is negative, and 0 is neutral."
    },
    "image_feedback_id": {
      "visibility": "public/private",
      "scope": "feedback_r",
      "type": "int",
      "description": "The numeric ID of the feedback's image (if present).  Note: This field may be absent, depending on the buyer's privacy settings."
    },
    "image_url_25x25": {
      "visibility": "public/private",
      "scope": "feedback_r",
      "type": "string",
      "description": "The url to a photo provided with the feedback, dimensions 25x25.  Note: This field may be absent, depending on the buyer's privacy settings."
    },
    "image_url_155x125": {
      "visibility": "public/private",
      "scope": "feedback_r",
      "type": "string",
      "description": "The url to a photo provided with the feedback, dimensions 155x125.  Note: This field may be absent, depending on the buyer's privacy settings."
    },
    "image_url_fullxfull": {
      "visibility": "public/private",
      "scope": "feedback_r",
      "type": "string",
      "description": "The url to a photo provided with the feedback, dimensions fullxfull.  Note: This field may be absent, depending on the buyer's privacy settings."
    }
  },
  "associations": {
    "Buyer": {
      "visibility": "public/private",
      "scope": "feedback_r",
      "type": "User",
      "description": "The user who who was the buyer in this transaction.  Note: This field may be absent, depending on the buyer's privacy settings."
    },
    "Seller": {
      "visibility": "public/private",
      "scope": "feedback_r",
      "type": "User",
      "description": "The user who was the seller in this transaction."
    },
    "Author": {
      "visibility": "public/private",
      "scope": "feedback_r",
      "type": "User",
      "description": "The user who wrote this feedback.  Note: This field may be absent, depending on the buyer's privacy settings."
    },
    "Subject": {
      "visibility": "public/private",
      "scope": "feedback_r",
      "type": "User",
      "description": "The user who received this feedback.  Note: This field may be absent, depending on the buyer's privacy settings."
    },
    "Transaction": {
      "visibility": "public/private",
      "scope": "feedback_r",
      "type": "Transaction",
      "description": "The transaction that this feedback pertains to."
    },
    "Listing": {
      "visibility": "public/private",
      "scope": "feedback_r",
      "type": "Listing",
      "description": "The listing that this feedback pertains to."
    }
  },
  "methods": {
    "findAllUserFeedbackAsAuthor": {
      "description": "Retrieves a set of Feedback objects associated to a User.",
      "method": "GET",
      "uri": "/users/:user_id/feedback/as-author",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "findAllUserFeedbackAsBuyer": {
      "description": "Retrieves a set of Feedback objects associated to a User.",
      "method": "GET",
      "uri": "/users/:user_id/feedback/as-buyer",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "findAllUserFeedbackAsSeller": {
      "description": "Retrieves a set of Feedback objects associated to a User.",
      "method": "GET",
      "uri": "/users/:user_id/feedback/as-seller",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "findAllUserFeedbackAsSubject": {
      "description": "Retrieves a set of Feedback objects associated to a User.",
      "method": "GET",
      "uri": "/users/:user_id/feedback/as-subject",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "findAllFeedbackFromBuyers": {
      "description": "Returns a set of FeedBack objects associated to a User.\n                    This is essentially the union between the findAllUserFeedbackAsBuyer\n                    and findAllUserFeedbackAsSubject methods.",
      "method": "GET",
      "uri": "/users/:user_id/feedback/from-buyers",
      "parameters": {
        "user_id": {
          "required": false,
          "default": "",
          "type": "user_id_or_name"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "findAllFeedbackFromSellers": {
      "description": "Returns a set of FeedBack objects associated to a User.\n                    This is essentially the union between\n                    the findAllUserFeedbackAsBuyer and findAllUserFeedbackAsSubject methods.",
      "method": "GET",
      "uri": "/users/:user_id/feedback/from-sellers",
      "parameters": {
        "user_id": {
          "required": false,
          "default": "",
          "type": "user_id_or_name"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    }
  }
},
"FeedbackInfo": {
  "description": "An array representing the percentage of positive feedback this user has earned.  This is returned in the feedback_info field of the User resource.This resource has no associations.This resource has no methods.",
  "fields": {
    "count": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The number of feedbacks."
    },
    "score": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The feedback score percentage."
    }
  },
  "associations": {},
  "methods": {}
},
"ForumPost": {
  "description": "A post from the forums.This resource has no associations.",
  "fields": {
    "thread_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "Unique identifier of the thread"
    },
    "post_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "Id of the individual post"
    },
    "post": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The content of the post"
    },
    "user_id": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Id of the user who created the post"
    },
    "last_edit_time": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "When the post was last edited"
    },
    "create_date": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "When the post was created"
    }
  },
  "associations": {},
  "methods": {
    "findTreasuryComments": {
      "description": "Get a Treasury's Comments",
      "method": "GET",
      "uri": "/treasuries/:treasury_key/comments",
      "parameters": {
        "treasury_key": {
          "required": true,
          "default": "",
          "type": "treasury_id"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "postTreasuryComment": {
      "description": "Leave a comment on a Treasury List",
      "method": "POST",
      "uri": "/treasuries/:treasury_key/comments",
      "parameters": {
        "message": {
          "required": true,
          "default": "",
          "type": "forum_post"
        }
      },
      "oauth": true,
      "scope": "treasury_w"
    },
    "deleteTreasuryComment": {
      "description": "Delete a given comment on a Treasury List",
      "method": "DELETE",
      "uri": "/treasuries/:treasury_key/comments/:comment_id",
      "parameters": {},
      "oauth": true,
      "scope": "treasury_w"
    }
  }
},
"GuestCart": {
  "description": "Represents a guest shopping cart on Etsy. Users have one cart per shop.This is a cart that is not yet associated to a single user, but to a guest ID for tracking purposes. Some important things to note about Guest Carts:",
  "fields": {
    "cart_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of the cart"
    },
    "shop_name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The shop name"
    },
    "message_to_seller": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The message to the seller"
    },
    "destination_country_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of the destination country"
    },
    "coupon_code": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The alphanumeric coupon code applied to the cart"
    },
    "currency_code": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The ISO (alphabetic) code for the currency"
    },
    "total": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The total price"
    },
    "subtotal": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The subtotal price"
    },
    "shipping_cost": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The shipping cost"
    },
    "tax_cost": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The tax cost"
    },
    "discount_amount": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The line-item discount amount (does not include tax or shipping)"
    },
    "shipping_discount_amount": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The shipping discount amount"
    },
    "tax_discount_amount": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The tax discount amount"
    },
    "url": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The full URL to the cart page on Etsy"
    },
    "listings": {
      "visibility": "public",
      "scope": "none",
      "type": "array(CartListing)",
      "description": "An array of purchase information for the listings"
    },
    "shipping_option": {
      "visibility": "public",
      "scope": "none",
      "type": "ShippingOption",
      "description": "The selected shipping option identifier for the cart"
    }
  },
  "associations": {
    "Shop": {
      "visibility": "public",
      "scope": "none",
      "type": "Shop",
      "description": "The shop"
    },
    "Listings": {
      "visibility": "public",
      "scope": "none",
      "type": "array(Listing)",
      "description": "An array of listings"
    },
    "Coupon": {
      "visibility": "public",
      "scope": "none",
      "type": "Coupon",
      "description": "The coupon applied to the cart"
    },
    "ShippingOptions": {
      "visibility": "public",
      "scope": "none",
      "type": "array(ShippingOption)",
      "description": "Available shipping options for the cart"
    }
  },
  "methods": {
    "findAllGuestCarts": {
      "description": "Get all guest's carts",
      "method": "GET",
      "uri": "/guests/:guest_id/carts",
      "parameters": {
        "guest_id": {
          "required": true,
          "default": "",
          "type": "guest_id"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "addToGuestCart": {
      "description": "Add a listing to guest's cart",
      "method": "POST",
      "uri": "/guests/:guest_id/carts",
      "parameters": {
        "guest_id": {
          "required": true,
          "default": "",
          "type": "guest_id"
        },
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "quantity": {
          "required": false,
          "default": "1",
          "type": "int"
        },
        "selected_variations": {
          "required": false,
          "default": "",
          "type": "map(int, int)"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "updateGuestCartListingQuantity": {
      "description": "Update a guest's cart listing purchase quantity",
      "method": "PUT",
      "uri": "/guests/:guest_id/carts",
      "parameters": {
        "guest_id": {
          "required": true,
          "default": "",
          "type": "guest_id"
        },
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "quantity": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "listing_customization_id": {
          "required": false,
          "default": "0",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "removeGuestCartListing": {
      "description": "Remove a listing from a guest's cart",
      "method": "DELETE",
      "uri": "/guests/:guest_id/carts",
      "parameters": {
        "guest_id": {
          "required": true,
          "default": "",
          "type": "guest_id"
        },
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "listing_customization_id": {
          "required": false,
          "default": "0",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "findGuestCart": {
      "description": "Get a guest's cart",
      "method": "GET",
      "uri": "/guests/:guest_id/carts/:cart_id",
      "parameters": {
        "guest_id": {
          "required": true,
          "default": "",
          "type": "guest_id"
        },
        "cart_id": {
          "required": true,
          "default": "",
          "type": "cart_id"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "updateGuestCart": {
      "description": "Update a guest's cart",
      "method": "PUT",
      "uri": "/guests/:guest_id/carts/:cart_id",
      "parameters": {
        "guest_id": {
          "required": true,
          "default": "",
          "type": "guest_id"
        },
        "cart_id": {
          "required": true,
          "default": "",
          "type": "cart_id"
        },
        "destination_country_id": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "message_to_seller": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "coupon_code": {
          "required": false,
          "default": "",
          "type": "string"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "deleteGuestCart": {
      "description": "Delete a guest's cart",
      "method": "DELETE",
      "uri": "/guests/:guest_id/carts/:cart_id",
      "parameters": {
        "guest_id": {
          "required": true,
          "default": "",
          "type": "guest_id"
        },
        "cart_id": {
          "required": true,
          "default": "",
          "type": "cart_id"
        }
      },
      "oauth": false,
      "scope": "none"
    }
  }
},
"ImageType": {
  "description": "Describes the available image types.This resource has no associations.",
  "fields": {
    "code": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Code for this image type, used in image URLs"
    },
    "desc": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Text description of the image type"
    },
    "sizes": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Available sizes for this image type"
    }
  },
  "associations": {},
  "methods": {
    "listImageTypes": {
      "description": "Lists available image types along with their supported sizes.",
      "method": "GET",
      "uri": "/image_types",
      "parameters": {},
      "oauth": false,
      "scope": "none"
    }
  }
},
"Guest": {
  "description": "A Guest represents an anonymous user that is using the Etsy API that has not yet authenticated, but may wish to store some information before authenticating (currently, guest carts). Guests are identified via a random 13-digit hash, which is unique to every Application. Important: This guest ID is associated directly to your Application, and will not be accessible through other API keys. Although Guests do not require an authenticated user, they do require your app to have production access in order to be interacted with.This resource has no associations.",
  "fields": {
    "guest_id": {
      "visibility": "public",
      "scope": "none",
      "type": "guest_id",
      "description": "The ID that associates to the guest - a random 13-digit hash. Validated by the regular expression '/^[a-zA-Z0-9-_]+$/'. Each ID is identified internally to the Application that created it, meaning that other applications will not have access to this guest, even with the same ID."
    },
    "checkout_url": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The URL to send the user's browser to on checkout. This will allow them to use this guest ID to check out with the carts associated. Please note that a guest cart's data are undefined after being merged on checkout."
    }
  },
  "associations": {},
  "methods": {
    "getGuest": {
      "description": "Get a guest by ID.",
      "method": "GET",
      "uri": "/guests/:guest_id",
      "parameters": {
        "guest_id": {
          "required": true,
          "default": "",
          "type": "guest_id"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "generateGuest": {
      "description": "A helper method that generates a Guest ID to associate to this anonymous session. This method is not strictly necessary, as any sufficiently random guest ID that is 13 characters in length will suffice and automatically create a guest account on use if it does not yet exist.",
      "method": "GET",
      "uri": "/guests/generator",
      "parameters": {},
      "oauth": false,
      "scope": "none"
    },
    "claimGuest": {
      "description": "Claim this guest to the associated user. Merges the GuestCart's associated with this GuestId into the logged in User's Carts. Returns the number of listings merged in meta['listings_merged'].",
      "method": "POST",
      "uri": "/guests/:guest_id/claim",
      "parameters": {
        "guest_id": {
          "required": true,
          "default": "",
          "type": "guest_id"
        }
      },
      "oauth": true,
      "scope": "cart_rw"
    },
    "mergeGuest": {
      "description": "Merge this guest to a different guest. Merges the GuestCart's associated with this GuestId into the target guest's cart. Returns the number of listings merged in meta['listings_merged'].",
      "method": "POST",
      "uri": "/guests/:guest_id/merge",
      "parameters": {
        "guest_id": {
          "required": true,
          "default": "",
          "type": "guest_id"
        },
        "target_guest_id": {
          "required": true,
          "default": "",
          "type": "guest_id"
        }
      },
      "oauth": true,
      "scope": "none"
    }
  }
},
"Ledger": {
  "description": "Represents a shop's ledger.This resource has no associations.",
  "fields": {
    "ledger_id": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The ledger's numeric ID."
    },
    "shop_id": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "The shop's numeric ID."
    },
    "currency": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "The currency code of the shop."
    },
    "create_date": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The date and time the ledger was created in Epoch seconds."
    },
    "update_date": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The date and time the ledger was last updated in Epoch seconds."
    }
  },
  "associations": {},
  "methods": {
    "findLedger": {
      "description": "Get a Shop Payment Account Ledger",
      "method": "GET",
      "uri": "/shops/:shop_id/ledger/",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        }
      },
      "oauth": true,
      "scope": "transactions_r"
    }
  }
},
"LedgerEntry": {
  "description": "Represents an entry in a shop's ledger.This resource has no associations.",
  "fields": {
    "ledger_entry_id": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The ledger entry's numeric ID."
    },
    "ledger_id": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The ledger's numeric ID."
    },
    "sequence": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The sequence allows ledger entries to be sorted chronologically. The higher the sequence, the more recent the entry."
    },
    "credit_amount": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The amount of money credited to the ledger."
    },
    "debit_amount": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The amount of money debited from the ledger."
    },
    "entry_type": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "Details what kind of ledger entry this is: a payment, refund, reversal of a failed refund, disbursement, returned disbursement, recoupment, miscellaneous credit, miscellaneous debit, or bill payment"
    },
    "reference_id": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "Depending on the entry_type, this is the id of the corresponding payment, payment adjustment, or disbursement."
    },
    "running_balance": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The amount of money in the shop's ledger the moment after this entry was applied."
    },
    "create_date": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The date and time the ledger entry was created in Epoch seconds."
    }
  },
  "associations": {},
  "methods": {
    "findLedgerEntries": {
      "description": "Get a Shop Payment Account Ledger's Entries",
      "method": "GET",
      "uri": "/shops/:shop_id/ledger/entries",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "min_created": {
          "required": false,
          "default": "",
          "type": "epoch"
        },
        "max_created": {
          "required": false,
          "default": "",
          "type": "epoch"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "transactions_r"
    }
  }
},
"ListingFile": {
  "description": "A file attached to a digital listing.This resource has no associations.",
  "fields": {
    "listing_file_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of the listing file."
    },
    "listing_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of the listing the file belongs to."
    },
    "rank": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "Display order."
    },
    "filename": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The file's displayable name."
    },
    "filesize": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The file's size in a displayable format."
    },
    "size_bytes": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The file's size in raw bytes."
    },
    "filetype": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The file's mimetype."
    },
    "create_date": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The time when this file was uploaded, in Epoch seconds."
    }
  },
  "associations": {},
  "methods": {
    "findAllListingFiles": {
      "description": "Finds all ListingFiles on a Listing",
      "method": "GET",
      "uri": "/listings/:listing_id/files",
      "parameters": {
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "listings_r"
    },
    "uploadListingFile": {
      "description": "Upload a new listing file, or attach an existing file to this listing.  You must either provide the listing_file_id\nof an existing listing file, or the name and file data of a new file that you are uploading.  If you are attaching\na file to a listing that is currently not digital, the listing will be converted to a digital listing.  This will\ncause the listing to have free shipping and will remove any variations.",
      "method": "POST",
      "uri": "/listings/:listing_id/files",
      "parameters": {
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "listing_file_id": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "file": {
          "required": false,
          "default": "",
          "type": "imagefile"
        },
        "name": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "rank": {
          "required": false,
          "default": "1",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    },
    "findListingFile": {
      "description": "Finds a ListingFile by ID",
      "method": "GET",
      "uri": "/listings/:listing_id/files/:listing_file_id",
      "parameters": {
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "listing_file_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "listings_r"
    },
    "deleteListingFile": {
      "description": "Removes the listing file from this listing.  If this is the last file on a listing, the listing will no longer\nbe considered a digital listing.",
      "method": "DELETE",
      "uri": "/listings/:listing_id/files/:listing_file_id",
      "parameters": {
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "listing_file_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    }
  }
},
"Listing": {
  "description": "Listings on Etsy are items for sale.  Each Listing is associated with a User, and with a Shop (Users own Shops.)  Etsy Listings have a creation date, and are valid for approximately four months.  Listings have a price and a quantity, and when they're sold out, the User must renew them before they can be sold again.The state field of Listings indicates whether a Listing is currently available for display on Etsy.  Most of the time, you will only see Listings in the \"active\" state, but the following states may rarely appear:By default, the method findAllListingActive returns all active Listings on Etsy, paginated by date. Use the optional parameters (such as keyword, min_price, etc.) to narrow these results. The sort_order and sort_on parameters can be used to change the order of returned results.  Note that these parameters are only available when using sort options. Without sort options, they will be ignored (and Listings will be returned newest-first.)The parameters translate_keywords and language may be used in conjunction with keywords to support non-English searches with findAllListingActive and findAllShopListingsActive. If language is set to a value other than en and translate_keywords is true, findAllListingActive will return results for keywords translated from the given language into English. For example, ?keywords=buch&language=de&translate_keywords=true will translate the term \"buch\" from German into English and search for listings that match the search term \"book.\" If these listings have a German translation, the listing results will be returned in German.To search within a shop, use findAllShopListingsActive.Listings may be edited with the updateListing method. Note that the Etsy API will attempt to activate a Listing after every edit operation. This may result in charges to the user's Etsy bill. To edit an inactive Listing without activating it, pass the optional parameter state=inactive. Note that edit options that increase the quantity of a Listing will result in charges to the owner. It is the developer's responsibility to warn the user that such charges may occur.To renew a Listing for another four months, pass the optional parameter renew=true. A Listing does not need to be expired to be renewed, however note that each renewal does not take the Listing's previous expiration date into account, so any unused time remaining on the Listing's old expiration date will be lost. Renewals will result in charges to a user's bill.Data of some models in the API can be expressed in multiple languages. For example, a Listing's title and description can be translated into German or French.\nTo access this data in the API you can use the language parameter. Like this /listings/12345?language=de. For more information about this\nlook at Working with Translations.Categories are no longer the first three tags of a Listing. Category is a first-class resource, with its own primary key ID.  When calling createListing, you must pass a category_id to specify the category for the Listing.The fields who_made, when_made and is_supply are the so-called Marketplace Attributes that help buyers locate a Listing under the headings Handmade, Vintage and Supplies. When creating new Listings, these parameters are required. As of this writing, not all Listings on Etsy have their Marketplace Attributes set.  These Listings will return null in these fields.With the introduction of Custom Order Requests, sellers may now designate a listing as private, which indicates it is reserved for purchase by a single buyer. These listings have the attribute is_private.Private listings have limited visibility on the site: they do not appear in search, browse or the seller's shop and are excluded from most Listing API endpoints.  There is also a more restrictive set of actions that can be taken on private listings. Sellers cannot renew or feature these listings.  Private listings also can't be added to Treasury Lists or Favorites.Please see the note on findAllShopListingsActive for more information about interacting with private listings on behalf of a seller.",
  "fields": {
    "listing_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The listing's numeric ID."
    },
    "state": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "One of active, removed, sold_out, expired, alchemy, edit, create, private, or unavailable."
    },
    "user_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of the user who posted the item."
    },
    "category_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of the listing's category."
    },
    "title": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The listing's title. This string is valid if it does not match the following pattern: /[^\\p{L}\\p{Nd}\\p{P}\\p{Sm}\\p{Zs}™©®]/u. The characters %, :, & and + can only be used once each."
    },
    "description": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "A description of the item."
    },
    "creation_tsz": {
      "visibility": "public",
      "scope": "none",
      "type": "float",
      "description": "Creation time, in epoch seconds."
    },
    "ending_tsz": {
      "visibility": "public",
      "scope": "none",
      "type": "float",
      "description": "The listing's expiration date and time, in epoch seconds."
    },
    "original_creation_tsz": {
      "visibility": "public",
      "scope": "none",
      "type": "float",
      "description": "The date and time the listing was originally posted, in epoch seconds."
    },
    "last_modified_tsz": {
      "visibility": "public",
      "scope": "none",
      "type": "float",
      "description": "The date and time the listing was updated, in epoch seconds."
    },
    "price": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The item's price (will be treated as private for sold listings)."
    },
    "currency_code": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The ISO (alphabetic) code for the item's currency."
    },
    "quantity": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The quantity of this item available for sale."
    },
    "tags": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "A list of tags for the item. A tag is valid if it does not match the pattern: /[^\\p{L}\\p{Nd}\\p{Zs}\\-'™©®]/u"
    },
    "category_path": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Name of the category of the item and the names of categories in that hierarchy."
    },
    "category_path_ids": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of each category in the this Listing's category hierarchy."
    },
    "materials": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "A list of materials used in the item. A material is valid if it does not match the pattern: /[^\\p{L}\\p{Nd}\\p{Zs}]/u"
    },
    "shop_section_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of the shop section for this listing, can be null"
    },
    "featured_rank": {
      "visibility": "public",
      "scope": "none",
      "type": "featured_rank",
      "description": "Position in the Featured Listings portion of the shop"
    },
    "state_tsz": {
      "visibility": "public",
      "scope": "none",
      "type": "float",
      "description": "The time at which the listing last changed state."
    },
    "url": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The full URL to the listing's page on Etsy."
    },
    "views": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The number of times the listing has been viewed on Etsy.com (does not include API views)."
    },
    "num_favorers": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The number of members who've marked this Listing as a favorite"
    },
    "shipping_template_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of the shipping template associated with the listing."
    },
    "shipping_profile_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "DEPRECATED: do not use"
    },
    "processing_min": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The minimum number of days for processing for this listing."
    },
    "processing_max": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The maximum number of days for processing for this listing."
    },
    "who_made": {
      "visibility": "public",
      "scope": "none",
      "type": "enum",
      "description": "Who made the item being listed."
    },
    "is_supply": {
      "visibility": "public",
      "scope": "none",
      "type": "boolean",
      "description": "True if the listing is a supply."
    },
    "when_made": {
      "visibility": "public",
      "scope": "none",
      "type": "enum",
      "description": "When was the item made."
    },
    "is_private": {
      "visibility": "public",
      "scope": "none",
      "type": "boolean",
      "description": "Is this listing a private listing that is intendend for a specific buyer and hidden from shop view. (NOTE: This field is experimental and may change at any time.)"
    },
    "recipient": {
      "visibility": "public",
      "scope": "none",
      "type": "enum",
      "description": "Who is this listing for."
    },
    "occasion": {
      "visibility": "public",
      "scope": "none",
      "type": "enum",
      "description": "What is the occasion for this listing."
    },
    "style": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Style of this listing. Each style is a free-form text string such as \"Formal\", or \"Steampunk\". A Listing may have up to two styles. A style is valid if it does not match the pattern: /[^\\p{L}\\p{Nd}\\p{Zs}]/u"
    },
    "non_taxable": {
      "visibility": "public",
      "scope": "none",
      "type": "boolean",
      "description": "If this flag is true, any applicable shop tax rates will not be applied to this listing on checkout."
    },
    "is_customizable": {
      "visibility": "public",
      "scope": "none",
      "type": "boolean",
      "description": "If this flag is true, a buyer may contact the seller for a customized order. Can only be set when the shop accepts custom orders and defaults to true in that case."
    },
    "is_digital": {
      "visibility": "public",
      "scope": "none",
      "type": "boolean",
      "description": "True if this listing is for a digital download."
    },
    "file_data": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Written description of the files attached to this digital listing."
    },
    "has_variations": {
      "visibility": "public",
      "scope": "none",
      "type": "boolean",
      "description": "True if variations are available for this Listing."
    },
    "language": {
      "visibility": "public",
      "scope": "none",
      "type": "language",
      "description": "The IETF language tag (e.g. 'fr') for the language in which the listing is returned."
    }
  },
  "associations": {
    "User": {
      "visibility": "public",
      "scope": "none",
      "type": "User",
      "description": "The user who posted the listing."
    },
    "Shop": {
      "visibility": "public",
      "scope": "none",
      "type": "Shop",
      "description": "The shop to which the listing belongs."
    },
    "Section": {
      "visibility": "public",
      "scope": "none",
      "type": "ShopSection",
      "description": "The shop section to which the listing belongs."
    },
    "Images": {
      "visibility": "public",
      "scope": "none",
      "type": "array(ListingImage)",
      "description": "An array of images for the listing."
    },
    "MainImage": {
      "visibility": "public",
      "scope": "none",
      "type": "ListingImage",
      "description": "The main image associated with this Listing"
    },
    "ShippingInfo": {
      "visibility": "public",
      "scope": "none",
      "type": "array(ShippingInfo)",
      "description": "An array of destinations and shipping prices for this listing."
    },
    "ShippingTemplate": {
      "visibility": "public",
      "scope": "none",
      "type": "ShippingTemplate",
      "description": "The linked shipping template"
    },
    "ShippingUpgrades": {
      "visibility": "public",
      "scope": "none",
      "type": "array(ShippingUpgrade)",
      "description": "An array of shipping upgrades for this listing."
    },
    "PaymentInfo": {
      "visibility": "public",
      "scope": "none",
      "type": "array(PaymentTemplate)",
      "description": "An array of accepted payment methods for this listing."
    },
    "Translations": {
      "visibility": "public",
      "scope": "none",
      "type": "array(ListingTranslation)",
      "description": "An array of translations for this Listing."
    },
    "Manufacturers": {
      "visibility": "public",
      "scope": "none",
      "type": "array(Manufacturer)",
      "description": "An array of manufacturers used in the making of this listing"
    },
    "Variations": {
      "visibility": "public",
      "scope": "none",
      "type": "array(Variations_Property)",
      "description": "An array of variations for this Listing. (NOTE: This can only be used with the getListing and getTransaction methods.)"
    }
  },
  "methods": {
    "createListing": {
      "description": "Creates a new Listing. NOTE: A shipping_template_id is required when creating a listing. NOTE: All listings created on www.etsy.com must be actual items for sale. Please see our guidelines for testing with live listings.",
      "method": "POST",
      "uri": "/listings",
      "parameters": {
        "quantity": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "title": {
          "required": true,
          "default": "",
          "type": "string"
        },
        "description": {
          "required": true,
          "default": "",
          "type": "text"
        },
        "price": {
          "required": true,
          "default": "",
          "type": "float"
        },
        "materials": {
          "required": false,
          "default": "",
          "type": "array(string)"
        },
        "shipping_template_id": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "shop_section_id": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "image_ids": {
          "required": false,
          "default": "",
          "type": "array(int)"
        },
        "is_customizable": {
          "required": false,
          "default": "",
          "type": "boolean"
        },
        "non_taxable": {
          "required": false,
          "default": "",
          "type": "boolean"
        },
        "image": {
          "required": false,
          "default": "",
          "type": "image"
        },
        "state": {
          "required": false,
          "default": "active",
          "type": "enum(active, draft)"
        },
        "processing_min": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "processing_max": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "category_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "tags": {
          "required": false,
          "default": "",
          "type": "array(string)"
        },
        "who_made": {
          "required": true,
          "default": "",
          "type": "enum(i_did, collective, someone_else)"
        },
        "is_supply": {
          "required": true,
          "default": "",
          "type": "boolean"
        },
        "when_made": {
          "required": true,
          "default": "",
          "type": "enum(made_to_order, 2010_2014, 2000_2009, 1995_1999, before_1995, 1990_1994, 1980s, 1970s, 1960s, 1950s, 1940s, 1930s, 1920s, 1910s, 1900s, 1800s, 1700s, before_1700)"
        },
        "recipient": {
          "required": false,
          "default": "",
          "type": "enum(men, women, unisex_adults, teen_boys, teen_girls, teens, boys, girls, children, baby_boys, baby_girls, babies, birds, cats, dogs, pets)"
        },
        "occasion": {
          "required": false,
          "default": "",
          "type": "enum(anniversary, baptism, bar_or_bat_mitzvah, birthday, canada_day, chinese_new_year, cinco_de_mayo, confirmation, christmas, day_of_the_dead, easter, eid, engagement, fathers_day, get_well, graduation, halloween, hanukkah, housewarming, kwanzaa, prom, july_4th, mothers_day, new_baby, new_years, quinceanera, retirement, st_patricks_day, sweet_16, sympathy, thanksgiving, valentines, wedding)"
        },
        "style": {
          "required": false,
          "default": "",
          "type": "array(string)"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    },
    "findAllFeaturedListings": {
      "description": "Finds all FeaturedTreasury listings.",
      "method": "GET",
      "uri": "/featured_treasuries/listings",
      "parameters": {
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "region": {
          "required": false,
          "default": "__ALL_REGIONS__",
          "type": "region"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "getListing": {
      "description": "Retrieves a Listing by id.",
      "method": "GET",
      "uri": "/listings/:listing_id",
      "parameters": {
        "listing_id": {
          "required": true,
          "default": "",
          "type": "array(int)"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "updateListing": {
      "description": "Updates a Listing",
      "method": "PUT",
      "uri": "/listings/:listing_id",
      "parameters": {
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "quantity": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "title": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "description": {
          "required": false,
          "default": "",
          "type": "text"
        },
        "price": {
          "required": false,
          "default": "",
          "type": "float"
        },
        "wholesale_price": {
          "required": false,
          "default": "",
          "type": "float"
        },
        "materials": {
          "required": false,
          "default": "",
          "type": "array(string)"
        },
        "renew": {
          "required": false,
          "default": "",
          "type": "boolean"
        },
        "shipping_template_id": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "shop_section_id": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "state": {
          "required": false,
          "default": "active",
          "type": "enum(active, inactive, draft)"
        },
        "image_ids": {
          "required": false,
          "default": "",
          "type": "array(int)"
        },
        "is_customizable": {
          "required": false,
          "default": "",
          "type": "boolean"
        },
        "non_taxable": {
          "required": false,
          "default": "",
          "type": "boolean"
        },
        "category_id": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "tags": {
          "required": false,
          "default": "",
          "type": "array(string)"
        },
        "who_made": {
          "required": false,
          "default": "",
          "type": "enum(i_did, collective, someone_else)"
        },
        "is_supply": {
          "required": false,
          "default": "",
          "type": "boolean"
        },
        "when_made": {
          "required": false,
          "default": "",
          "type": "enum(made_to_order, 2010_2014, 2000_2009, 1995_1999, before_1995, 1990_1994, 1980s, 1970s, 1960s, 1950s, 1940s, 1930s, 1920s, 1910s, 1900s, 1800s, 1700s, before_1700)"
        },
        "recipient": {
          "required": false,
          "default": "",
          "type": "enum(men, women, unisex_adults, teen_boys, teen_girls, teens, boys, girls, children, baby_boys, baby_girls, babies, birds, cats, dogs, pets)"
        },
        "occasion": {
          "required": false,
          "default": "",
          "type": "enum(anniversary, baptism, bar_or_bat_mitzvah, birthday, canada_day, chinese_new_year, cinco_de_mayo, confirmation, christmas, day_of_the_dead, easter, eid, engagement, fathers_day, get_well, graduation, halloween, hanukkah, housewarming, kwanzaa, prom, july_4th, mothers_day, new_baby, new_years, quinceanera, retirement, st_patricks_day, sweet_16, sympathy, thanksgiving, valentines, wedding)"
        },
        "style": {
          "required": false,
          "default": "",
          "type": "array(string)"
        },
        "processing_min": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "processing_max": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "featured_rank": {
          "required": false,
          "default": "",
          "type": "featured_rank"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    },
    "deleteListing": {
      "description": "Deletes a Listing",
      "method": "DELETE",
      "uri": "/listings/:listing_id",
      "parameters": {
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "listings_d"
    },
    "findAllListingActive": {
      "description": "Finds all active Listings. (Note: the sort_on and sort_order options only work when combined with one of the search options: keywords, color, tags, location, etc.)",
      "method": "GET",
      "uri": "/listings/active",
      "parameters": {
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "keywords": {
          "required": false,
          "default": "",
          "type": "text"
        },
        "sort_on": {
          "required": false,
          "default": "created",
          "type": "enum(created, price, score)"
        },
        "sort_order": {
          "required": false,
          "default": "down",
          "type": "enum(up, down)"
        },
        "min_price": {
          "required": false,
          "default": "",
          "type": "float"
        },
        "max_price": {
          "required": false,
          "default": "",
          "type": "float"
        },
        "color": {
          "required": false,
          "default": "",
          "type": "color_triplet"
        },
        "color_accuracy": {
          "required": false,
          "default": "0",
          "type": "color_wiggle"
        },
        "tags": {
          "required": false,
          "default": "",
          "type": "array(string)"
        },
        "category": {
          "required": false,
          "default": "",
          "type": "category"
        },
        "location": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "lat": {
          "required": false,
          "default": "",
          "type": "latitude"
        },
        "lon": {
          "required": false,
          "default": "",
          "type": "longitude"
        },
        "region": {
          "required": false,
          "default": "",
          "type": "region"
        },
        "geo_level": {
          "required": false,
          "default": "city",
          "type": "enum(city, state, country)"
        },
        "accepts_gift_cards": {
          "required": false,
          "default": "false",
          "type": "boolean"
        },
        "translate_keywords": {
          "required": false,
          "default": "false",
          "type": "boolean"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "getInterestingListings": {
      "description": "Collects the list of interesting listings",
      "method": "GET",
      "uri": "/listings/interesting",
      "parameters": {
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "getTrendingListings": {
      "description": "Collects the list of listings used to generate the trending listing page",
      "method": "GET",
      "uri": "/listings/trending",
      "parameters": {
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "findBrowseSegmentListings": {
      "description": "Find Listings for a Segment by Segment path. NOTE: Offset must be an integer multiple of limit.",
      "method": "GET",
      "uri": "/segments/listings",
      "parameters": {
        "path": {
          "required": true,
          "default": "",
          "type": "string"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "keywords": {
          "required": false,
          "default": "",
          "type": "text"
        },
        "sort_on": {
          "required": false,
          "default": "created",
          "type": "enum(created, price, score)"
        },
        "sort_order": {
          "required": false,
          "default": "down",
          "type": "enum(up, down)"
        },
        "min_price": {
          "required": false,
          "default": "",
          "type": "float"
        },
        "max_price": {
          "required": false,
          "default": "",
          "type": "float"
        },
        "ship_to": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "location": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "lat": {
          "required": false,
          "default": "",
          "type": "latitude"
        },
        "lon": {
          "required": false,
          "default": "",
          "type": "longitude"
        },
        "geo_level": {
          "required": false,
          "default": "city",
          "type": "enum(city, state, country)"
        },
        "accepts_gift_cards": {
          "required": false,
          "default": "false",
          "type": "boolean"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "findAllListingsForFeaturedTreasuryId": {
      "description": "Finds all listings for a certain FeaturedTreasury.",
      "method": "GET",
      "uri": "/featured_treasuries/:featured_treasury_id/listings",
      "parameters": {
        "featured_treasury_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "findAllActiveListingsForFeaturedTreasuryId": {
      "description": "Finds all active listings for a certain FeaturedTreasury.",
      "method": "GET",
      "uri": "/featured_treasuries/:featured_treasury_id/listings/active",
      "parameters": {
        "featured_treasury_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "findAllCurrentFeaturedListings": {
      "description": "Finds FeaturedTreasury listings that are currently displayed on a regional homepage.",
      "method": "GET",
      "uri": "/featured_treasuries/listings/homepage_current",
      "parameters": {
        "region": {
          "required": false,
          "default": "US",
          "type": "region"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "findAllReceiptListings": {
      "description": "Finds all listings in a receipt",
      "method": "GET",
      "uri": "/receipts/:receipt_id/listings",
      "parameters": {
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "receipt_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "transactions_r"
    },
    "findAllShopListingsActive": {
      "description": "Finds all active Listings associated with a Shop.(NOTE: If calling on behalf of a shop owner in the context of listing management, be sure to include the parameter include_private = true.  This will return private listings that are not publicly visible in the shop, but which can be managed.  This is an experimental feature and may change.)",
      "method": "GET",
      "uri": "/shops/:shop_id/listings/active",
      "parameters": {
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "keywords": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "sort_on": {
          "required": false,
          "default": "created",
          "type": "enum(created, price, score)"
        },
        "sort_order": {
          "required": false,
          "default": "down",
          "type": "enum(up, down)"
        },
        "min_price": {
          "required": false,
          "default": "",
          "type": "float"
        },
        "max_price": {
          "required": false,
          "default": "",
          "type": "float"
        },
        "color": {
          "required": false,
          "default": "",
          "type": "color_triplet"
        },
        "color_accuracy": {
          "required": false,
          "default": "0",
          "type": "color_wiggle"
        },
        "tags": {
          "required": false,
          "default": "",
          "type": "array(string)"
        },
        "category": {
          "required": false,
          "default": "",
          "type": "category"
        },
        "translate_keywords": {
          "required": false,
          "default": "false",
          "type": "boolean"
        },
        "include_private": {
          "required": false,
          "default": "0",
          "type": "boolean"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "findAllShopListingsDraft": {
      "description": "Finds all of a Shop's draft listings",
      "method": "GET",
      "uri": "/shops/:shop_id/listings/draft",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "listings_r"
    },
    "findAllShopListingsExpired": {
      "description": "Retrieves Listings associated to a Shop that are expired",
      "method": "GET",
      "uri": "/shops/:shop_id/listings/expired",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "listings_r"
    },
    "getShopListingExpired": {
      "description": "Retrieves a Listing associated to a Shop that is inactive",
      "method": "GET",
      "uri": "/shops/:shop_id/listings/expired/:listing_id",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "listings_r"
    },
    "findAllShopListingsFeatured": {
      "description": "Retrieves Listings associated to a Shop that are featured",
      "method": "GET",
      "uri": "/shops/:shop_id/listings/featured",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "findAllShopListingsInactive": {
      "description": "Retrieves Listings associated to a Shop that are inactive",
      "method": "GET",
      "uri": "/shops/:shop_id/listings/inactive",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "listings_r"
    },
    "getShopListingInactive": {
      "description": "Retrieves a Listing associated to a Shop that is inactive",
      "method": "GET",
      "uri": "/shops/:shop_id/listings/inactive/:listing_id",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "listings_r"
    },
    "findAllShopSectionListings": {
      "description": "Finds all listings within a shop section",
      "method": "GET",
      "uri": "/shops/:shop_id/sections/:shop_section_id/listings",
      "parameters": {
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "shop_section_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "findAllShopSectionListingsActive": {
      "description": "Finds all listings within a shop section",
      "method": "GET",
      "uri": "/shops/:shop_id/sections/:shop_section_id/listings/active",
      "parameters": {
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "shop_section_id": {
          "required": true,
          "default": "",
          "type": "array(int)"
        },
        "sort_on": {
          "required": false,
          "default": "created",
          "type": "enum(created, price)"
        },
        "sort_order": {
          "required": false,
          "default": "down",
          "type": "enum(up, down)"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "findAllCartListings": {
      "description": "Finds all listings in a given Cart",
      "method": "GET",
      "uri": "/users/:user_id/carts/:cart_id/listings",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "cart_id": {
          "required": true,
          "default": "",
          "type": "cart_id"
        }
      },
      "oauth": true,
      "scope": "cart_rw"
    }
  }
},
"ListingImage": {
  "description": "A photograph of a listing for sale.The ListingImage resource includes\nfields for the following sizes, which be officially supported by Etsy at least\nthrough the end of 2013:\nAdditional sizes are available but do not have specific fields in the\nresource. Instead, treat the full size URL as a template. Use the\n\nImageType methods to retrieve available sizes for listing images;\nany of these can be subsituted in place of \"fullxfull\" in the full size\nURL to make a new URL for the listing image of that size.The 570xN and fullxfull image sizes have variable dimensions depending on the original artwork uploaded by the seller:If the provided sizes don't suit your application, you are free to download the larger image sizes, resize and cache them for your own use, as long as you adhere to our API Terms of Use.Image uploads can be performed using a POST request with the Content-Type: multipart/form-dataheader, following RFC1867.  This is identical to using curl -F, except that that request needs to be signed using OAuth.Your OAuth toolkit must support multipart form uploads as described above.  Here is example code for PHP using the PECL OAuth 1.1 extension (PECL OAuth 1.0 will not work):",
  "fields": {
    "listing_image_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of the listing image."
    },
    "hex_code": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The image's average color, in webhex notation."
    },
    "red": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The image's average red value, 0-255 (RGB color)."
    },
    "green": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The image's average green value, 0-255 (RGB color)."
    },
    "blue": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The image's average blue value, 0-255 (RGB color)."
    },
    "hue": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The image's average hue, 0-360 (HSV color)."
    },
    "saturation": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The image's average saturation, 0-100 (HSV color)."
    },
    "brightness": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The image's average brightness, 0-100 (HSV color)."
    },
    "is_black_and_white": {
      "visibility": "public",
      "scope": "none",
      "type": "boolean",
      "description": "True if the image is in black & white."
    },
    "creation_tsz": {
      "visibility": "public",
      "scope": "none",
      "type": "float",
      "description": "Creation time, in epoch seconds."
    },
    "listing_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric value of the listing id the image belongs to."
    },
    "rank": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "Display order."
    },
    "url_75x75": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The url to a 75x75 thumbnail of the image."
    },
    "url_170x135": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The url to a 170x135 thumbnail of the image."
    },
    "url_570xN": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The url to a thumbnail of the image, no more than 570px width by variable height."
    },
    "url_fullxfull": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The url to the full-size image, no more than 1500px width by variable height."
    },
    "full_height": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "Height of the image returned by url_fullxfull."
    },
    "full_width": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "Width of the image returned by url_fullxfull."
    }
  },
  "associations": {
    "Listing": {
      "visibility": "public",
      "scope": "none",
      "type": "Listing",
      "description": "The listing to which the image belongs."
    }
  },
  "methods": {
    "findAllListingImages": {
      "description": "Retrieves a set of ListingImage objects associated to a Listing.",
      "method": "GET",
      "uri": "/listings/:listing_id/images",
      "parameters": {
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "uploadListingImage": {
      "description": "Upload a new listing image, or re-associate a previously deleted one. You may associate an image\n                                      to any listing within the same shop that the image's original listing belongs to.\n                                      You MUST pass either a listing_image_id OR an image to this method.\n                                      Passing a listing_image_id serves to re-associate an image that was previously deleted.\n                                      If you wish to re-associate an image, we strongly recommend using the listing_image_id\n                                      argument as opposed to re-uploading a new image each time, to save bandwidth for you as well as us.\n                                      Pass overwrite=1 to replace the existing image at a given rank.",
      "method": "POST",
      "uri": "/listings/:listing_id/images",
      "parameters": {
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "listing_image_id": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "image": {
          "required": false,
          "default": "",
          "type": "imagefile"
        },
        "rank": {
          "required": false,
          "default": "1",
          "type": "int"
        },
        "overwrite": {
          "required": false,
          "default": "0",
          "type": "boolean"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    },
    "getImage_Listing": {
      "description": "Retrieves a Image_Listing by id.",
      "method": "GET",
      "uri": "/listings/:listing_id/images/:listing_image_id",
      "parameters": {
        "listing_image_id": {
          "required": true,
          "default": "",
          "type": "array(int)"
        },
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "deleteListingImage": {
      "description": "Deletes a listing image. A copy of the file remains on our servers,\n                                       and so a deleted image may be re-associated with the listing without\n                                       re-uploading the original image; see uploadListingImage",
      "method": "DELETE",
      "uri": "/listings/:listing_id/images/:listing_image_id",
      "parameters": {
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "listing_image_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    }
  }
},
"ListingTranslation": {
  "description": "Represents the translation data for a Listing.This resource has no associations.",
  "fields": {
    "listing_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID for the Listing."
    },
    "language": {
      "visibility": "public",
      "scope": "none",
      "type": "language",
      "description": "The IETF language tag (e.g. 'fr') for the language of this translation."
    },
    "title": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The title of the Listing of this Translation."
    },
    "description": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The description of the Listing of this Translation."
    },
    "tags": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The tags of the Listing of this Translation."
    }
  },
  "associations": {},
  "methods": {
    "getListingTranslation": {
      "description": "Retrieves a ListingTranslation by listing_id and language",
      "method": "GET",
      "uri": "/listings/:listing_id/translations/:language",
      "parameters": {
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "language": {
          "required": true,
          "default": "",
          "type": "language"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "createListingTranslation": {
      "description": "Creates a ListingTranslation by listing_id and language",
      "method": "POST",
      "uri": "/listings/:listing_id/translations/:language",
      "parameters": {
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "language": {
          "required": true,
          "default": "",
          "type": "language"
        },
        "title": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "description": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "tags": {
          "required": false,
          "default": "",
          "type": "array(string)"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    },
    "updateListingTranslation": {
      "description": "Updates a ListingTranslation by listing_id and language",
      "method": "PUT",
      "uri": "/listings/:listing_id/translations/:language",
      "parameters": {
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "language": {
          "required": true,
          "default": "",
          "type": "language"
        },
        "title": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "description": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "tags": {
          "required": false,
          "default": "",
          "type": "array(string)"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    },
    "deleteListingTranslation": {
      "description": "Deletes a ListingTranslation by listing_id and language",
      "method": "DELETE",
      "uri": "/listings/:listing_id/translations/:language",
      "parameters": {
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "language": {
          "required": true,
          "default": "",
          "type": "language"
        }
      },
      "oauth": true,
      "scope": "listings_d"
    }
  }
},
"Manufacturer": {
  "description": "Data about the outside manufacturers that a shop works with.This resource has no methods.",
  "fields": {
    "name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Name of the manufacturer"
    },
    "description": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The manufacturer's description as it appears on the Shop About page."
    },
    "location": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The manufacturer's location."
    }
  },
  "associations": {
    "Shop": {
      "visibility": "public",
      "scope": "none",
      "type": "Shop",
      "description": "The shop that works with this manufacturer."
    }
  },
  "methods": {}
},
"ParamList": {
  "description": "This is an associative array that maps parameter names to types.  It has a varying number of fields with differing names.This resource has no associations.This resource has no methods.",
  "fields": {
    "param_name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Each field in the record represents an Etsy API method parameter.  The value corresponds to one of the documented data or resource types."
    }
  },
  "associations": {},
  "methods": {}
},
"Payment": {
  "description": "Represents a Payment made with Direct Checkout.  Please note all monetary amounts are in USD pennies unless otherwise specified.This resource has no associations.",
  "fields": {
    "payment_id": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The payment's numeric ID."
    },
    "buyer_user_id": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The buyer's numeric ID."
    },
    "shop_id": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The shop's numeric ID."
    },
    "receipt_id": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The receipt's numeric ID."
    },
    "amount_gross": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The original gross amount of the order, in pennies - this is grand total, including shipping and taxes."
    },
    "amount_fees": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The original card processing fee of the order in pennies."
    },
    "amount_net": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The total value of the payment less fees (amount_gross - amount_fees)."
    },
    "posted_gross": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The gross amount which posted to the ledger once shipped. This is equal to the amount_gross UNLESS the seller issues a refund prior to shipping. We consider \"shipping\" to the event which \"posts\" to the ledger. Therefore, if the seller refunds first, we simply reduce the amount_gross and post that amount. The seller never sees the refunded amount in their ledger. This is equal to the \"Credit\" amount in the ledger entry."
    },
    "posted_fees": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "Amount of the fees that posted when shipped. We refund a proportional amount of the fees when a seller refunds a buyer. If they refund prior to shipping, the posted amount will be less then the original."
    },
    "posted_net": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The total value of the payment at the time of posting it to the ledger less fees (posted_gross - posted_fees)"
    },
    "adjusted_gross": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "If the payment is refunded, partially or fully, this is the new gross amount after the refund."
    },
    "adjusted_fees": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "If the payment is refunded, partially or fully, this is the new fee amount after the refund."
    },
    "adjusted_net": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The total value of the payment after refunds less fees (adjusted_gross - adjusted_fees)."
    },
    "currency": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "What currency the payment was made in."
    },
    "shipping_user_id": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The numeric id of the user to which the order is being shipped."
    },
    "shipping_address_id": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The numeric id identifying the shipping address."
    },
    "billing_address_id": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The numeric id identifying the billing address of the buyer."
    },
    "status": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "Most commonly \"settled\" or \"authed\". Marks the current status of the payment."
    },
    "shipped_date": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The date and time the payment was shipped in Epoch seconds."
    },
    "create_date": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The date and time the payment was created in Epoch seconds."
    },
    "update_date": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The date and time the payment was last updated in Epoch seconds."
    }
  },
  "associations": {},
  "methods": {
    "findPayment": {
      "description": "Get a Direct Checkout Payment",
      "method": "GET",
      "uri": "/payments/:payment_id",
      "parameters": {
        "payment_id": {
          "required": true,
          "default": "",
          "type": "array(int)"
        }
      },
      "oauth": true,
      "scope": "transactions_r"
    },
    "findShopPaymentByReceipt": {
      "description": "Get a Payment by Shop Receipt ID",
      "method": "GET",
      "uri": "/shops/:shop_id/receipts/:receipt_id/payments",
      "parameters": {
        "receipt_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        }
      },
      "oauth": true,
      "scope": "transactions_r"
    }
  }
},
"PaymentAdjustment": {
  "description": "Represents refund on a Direct Checkout Payment. Please note all monetary amounts are in USD pennies unless otherwise specified.This resource has no associations.",
  "fields": {
    "payment_adjustment_id": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The payment adjustment's numeric ID."
    },
    "payment_id": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The payment's numeric ID."
    },
    "status": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "The status of the Payment Adjustment. Can be OPEN, REFUNDED, ERROR, or REFUND_FAILED."
    },
    "user_id": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The seller's numeric ID."
    },
    "reason_code": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "A human-readable string describing the need for the refund."
    },
    "total_adjustment_amount": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The total amount of the refund."
    },
    "total_fee_adjustment_amount": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The amount of card processing fees associated with this adjustment."
    },
    "create_date": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The date and time the payment adjustment was created in Epoch seconds."
    },
    "update_date": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The date and time the payment adjustment was last updated in Epoch seconds."
    }
  },
  "associations": {},
  "methods": {
    "findPaymentAdjustments": {
      "description": "Get a Payment Adjustments from a Payment Id",
      "method": "GET",
      "uri": "/payments/:payment_id/adjustments",
      "parameters": {
        "payment_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "transactions_r"
    },
    "findPaymentAdjustment": {
      "description": "Get a Direct Checkout Payment Adjustment",
      "method": "GET",
      "uri": "/payments/:payment_id/adjustments/:payment_adjustment_id",
      "parameters": {
        "payment_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "payment_adjustment_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "transactions_r"
    }
  }
},
"PaymentAdjustmentItem": {
  "description": "A Direct Checkout Payment may have adjustments, or refunds. These adjustments can have different items, associated with the area being refunded, like shipping, sales tax, or the item itself. Please note all monetary amounts are in USD pennies unless otherwise specified.This resource has no associations.",
  "fields": {
    "payment_adjustment_item_id": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The payment adjustment item's numeric ID."
    },
    "payment_adjustment_id": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The payment adjustment's numeric ID."
    },
    "adjustment_type": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "A human readable string describing the area being refundedOne of: TRANS, TAX, or SHIP"
    },
    "amount": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The total amount of the payment adjustment item."
    },
    "transaction_id": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The numerice ID of the Credit Card Transaction"
    },
    "create_date": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The date and time the payment adjustment item was created in Epoch seconds."
    }
  },
  "associations": {},
  "methods": {
    "findPaymentAdjustmentItem": {
      "description": "Get a Direct Checkout Payment Adjustment Item",
      "method": "GET",
      "uri": "/payments/:payment_id/adjustments/:payment_adjustment_id/items/:payment_adjustment_item_id",
      "parameters": {
        "payment_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "payment_adjustment_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "payment_adjustment_item_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "transactions_r"
    }
  }
},
"PaymentTemplate": {
  "description": "A payment template for a user.",
  "fields": {
    "payment_template_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID for this payment template"
    },
    "allow_bt": {
      "visibility": "public",
      "scope": "none",
      "type": "boolean",
      "description": "True if the seller accepts bank transfers for payment"
    },
    "allow_check": {
      "visibility": "public",
      "scope": "none",
      "type": "boolean",
      "description": "True if the seller accepts checks for payment"
    },
    "allow_mo": {
      "visibility": "public",
      "scope": "none",
      "type": "boolean",
      "description": "True if the seller accepts money order payments"
    },
    "allow_other": {
      "visibility": "public",
      "scope": "none",
      "type": "boolean",
      "description": "True if the seller accepts other payments"
    },
    "allow_paypal": {
      "visibility": "public",
      "scope": "none",
      "type": "boolean",
      "description": "True if the seller accepts paypal"
    },
    "allow_cc": {
      "visibility": "public",
      "scope": "none",
      "type": "boolean",
      "description": "True if the seller accepts credit cards"
    },
    "paypal_email": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "string",
      "description": "The users paypal email address."
    },
    "name": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "string",
      "description": "The name of the seller."
    },
    "first_line": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "string",
      "description": "The first line of the seller's address."
    },
    "second_line": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "string",
      "description": "The second line of the seller's address."
    },
    "city": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "string",
      "description": "The seller's city."
    },
    "state": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "string",
      "description": "The seller's state."
    },
    "zip": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "string",
      "description": "The seller's zip code."
    },
    "country_id": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "int",
      "description": "The seller's country."
    },
    "user_id": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "int",
      "description": "The user's numeric ID."
    },
    "listing_payment_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "Provided for backward compatibility to ListingPayment. This will return the same value as payment_template_id."
    }
  },
  "associations": {
    "Country": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "Country",
      "description": "The full Country record of the shop's country."
    },
    "User": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "User",
      "description": "The User that owns this payment template"
    }
  },
  "methods": {
    "findShopPaymentTemplates": {
      "description": "Retrieves the PaymentTemplate associated with the Shop",
      "method": "GET",
      "uri": "/shops/:shop_id/payment_templates",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "createShopPaymentTemplate": {
      "description": "Creates a new PaymentTemplate",
      "method": "POST",
      "uri": "/shops/:shop_id/payment_templates",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "allow_check": {
          "required": false,
          "default": "",
          "type": "boolean"
        },
        "allow_mo": {
          "required": false,
          "default": "",
          "type": "boolean"
        },
        "allow_other": {
          "required": false,
          "default": "",
          "type": "boolean"
        },
        "allow_paypal": {
          "required": false,
          "default": "",
          "type": "boolean"
        },
        "allow_cc": {
          "required": false,
          "default": "",
          "type": "boolean"
        },
        "paypal_email": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "name": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "first_line": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "second_line": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "city": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "state": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "zip": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "country_id": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    },
    "updateShopPaymentTemplate": {
      "description": "Updates a PaymentTemplate",
      "method": "PUT",
      "uri": "/shops/:shop_id/payment_templates/:payment_template_id",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "allow_check": {
          "required": false,
          "default": "",
          "type": "boolean"
        },
        "allow_mo": {
          "required": false,
          "default": "",
          "type": "boolean"
        },
        "allow_other": {
          "required": false,
          "default": "",
          "type": "boolean"
        },
        "allow_paypal": {
          "required": false,
          "default": "",
          "type": "boolean"
        },
        "allow_cc": {
          "required": false,
          "default": "",
          "type": "boolean"
        },
        "paypal_email": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "name": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "first_line": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "second_line": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "city": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "state": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "zip": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "country_id": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "payment_template_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    },
    "findAllUserPaymentTemplates": {
      "description": "Retrieves a set of PaymentTemplate objects associated to a User.",
      "method": "GET",
      "uri": "/users/:user_id/payments/templates",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        }
      },
      "oauth": true,
      "scope": "listings_r"
    }
  }
},
"Receipt": {
  "description": "Represents proof of payment from a user to a shop for one or more transactions.",
  "fields": {
    "receipt_id": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The receipt's numeric ID."
    },
    "order_id": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The numeric ID of the order this receipt is associated with."
    },
    "seller_user_id": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The numeric ID of the seller for this receipt."
    },
    "buyer_user_id": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The numeric ID of the buyer for this receipt."
    },
    "creation_tsz": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "float",
      "description": "Creation time, in epoch seconds."
    },
    "last_modified_tsz": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "float",
      "description": "Last modification time, in epoch seconds."
    },
    "name": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "The name portion of the buyer's address."
    },
    "first_line": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "The first line of the buyer's address."
    },
    "second_line": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "The second line of the buyer's address."
    },
    "city": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "The city for the buyer's address."
    },
    "state": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "The state for the buyer's address."
    },
    "zip": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "The zip code of the buyer's address."
    },
    "country_id": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The numeric ID of the buyer's country."
    },
    "payment_method": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "The payment method used. May be pp, cc, ck, mo, or other (stands for paypal, credit card, check, money order, other)."
    },
    "payment_email": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "The email address where payment confirmation is sent."
    },
    "message_from_seller": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "An optional message from the seller."
    },
    "message_from_buyer": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "An optional message from the buyer."
    },
    "was_paid": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "boolean",
      "description": "True if the receipt was paid."
    },
    "total_tax_cost": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "float",
      "description": "The total sales tax of the receipt."
    },
    "total_price": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "float",
      "description": "Sum of the individual listings' (price * quantity). Does not included tax or shipping costs."
    },
    "total_shipping_cost": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "float",
      "description": "The total shipping cost of the receipt."
    },
    "currency_code": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "The ISO code (alphabetic) for the seller's native currency."
    },
    "message_from_payment": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "The machine generated acknowledgement from the payment system."
    },
    "was_shipped": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "boolean",
      "description": "True if the items in the receipt were shipped."
    },
    "buyer_email": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "The email address of the buyer."
    },
    "seller_email": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "The email address of the seller."
    },
    "discount_amt": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "float",
      "description": "The total discount for the receipt, if using a discount (percent or fixed) Coupon. Free shipping Coupons are not reflected here; check the Coupon object for these."
    },
    "subtotal": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "float",
      "description": "total_price minus coupon discounts. Does not included tax or shipping costs."
    },
    "grandtotal": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "float",
      "description": "total_price minus coupon discount plus tax and shipping costs."
    },
    "shipping_tracking_code": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "The tracking code for the shipment.\n                            DEPRECATED: This field will be removed by 10/2013. Use shipments  instead. When a receipt has more than one shipment, behavior of this field is unspecified."
    },
    "shipping_tracking_url": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "The tracking URL for the shipment.\n                            DEPRECATED: This field will be removed by 10/2013. Use shipments  instead. When a receipt has more than one shipment, behavior of this field is unspecified."
    },
    "shipping_carrier": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "The shipping carrier.\n                            DEPRECATED: This field will be removed by 10/2013. Use shipments  instead. When a receipt has more than one shipment, behavior of this field is unspecified."
    },
    "shipping_note": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "The shipping notification note text.\n                            DEPRECATED: This field will be removed by 10/2013. Use shipments  instead. When a receipt has more than one shipment, behavior of this field is unspecified."
    },
    "shipping_notification_date": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The date the last shipping notification was sent.\n                            DEPRECATED: This field will be removed by 10/2013. Use shipments  instead. When a receipt has more than one shipment, behavior of this field is unspecified."
    },
    "shipments": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "array(ReceiptShipment)",
      "description": "Shipment information associated to this receipt."
    }
  },
  "associations": {
    "Coupon": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "Coupon",
      "description": "The coupon for the receipt."
    },
    "Country": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "Country",
      "description": "The country to which the order was shipped."
    },
    "Buyer": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "User",
      "description": "The buyer of the items in this receipt."
    },
    "Seller": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "User",
      "description": "The seller of the items in this receipt."
    },
    "Transactions": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "array(Transaction)",
      "description": "The transactions associated to this receipt."
    },
    "Listings": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "array(Listing)",
      "description": "The listings associated to this receipt."
    }
  },
  "methods": {
    "getReceipt": {
      "description": "Retrieves a Receipt by id.",
      "method": "GET",
      "uri": "/receipts/:receipt_id",
      "parameters": {
        "receipt_id": {
          "required": true,
          "default": "",
          "type": "array(int)"
        }
      },
      "oauth": true,
      "scope": "transactions_r"
    },
    "updateReceipt": {
      "description": "Updates a Receipt",
      "method": "PUT",
      "uri": "/receipts/:receipt_id",
      "parameters": {
        "receipt_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "was_paid": {
          "required": false,
          "default": "",
          "type": "boolean"
        },
        "was_shipped": {
          "required": false,
          "default": "",
          "type": "boolean"
        },
        "message_from_seller": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "message_from_buyer": {
          "required": false,
          "default": "",
          "type": "string"
        }
      },
      "oauth": true,
      "scope": "transactions_w"
    },
    "findAllShopReceipts": {
      "description": "Retrieves a set of Receipt objects associated to a Shop.",
      "method": "GET",
      "uri": "/shops/:shop_id/receipts",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "min_created": {
          "required": false,
          "default": "",
          "type": "epoch"
        },
        "max_created": {
          "required": false,
          "default": "",
          "type": "epoch"
        },
        "min_last_modified": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "max_last_modified": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "was_paid": {
          "required": false,
          "default": "",
          "type": "boolean"
        },
        "was_shipped": {
          "required": false,
          "default": "",
          "type": "boolean"
        }
      },
      "oauth": true,
      "scope": "transactions_r"
    },
    "submitTracking": {
      "description": "Submits tracking information and sends a shipping notification email to the buyer. If send_bcc is true, the shipping notification will be sent to the seller as well. Refer to additional documentation.",
      "method": "POST",
      "uri": "/shops/:shop_id/receipts/:receipt_id/tracking",
      "parameters": {
        "tracking_code": {
          "required": true,
          "default": "",
          "type": "string"
        },
        "carrier_name": {
          "required": true,
          "default": "",
          "type": "string"
        },
        "send_bcc": {
          "required": false,
          "default": "",
          "type": "boolean"
        }
      },
      "oauth": true,
      "scope": "transactions_w"
    },
    "findAllShopReceiptsByStatus": {
      "description": "Retrieves a set of Receipt objects associated to a Shop based on the status.",
      "method": "GET",
      "uri": "/shops/:shop_id/receipts/:status",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "status": {
          "required": true,
          "default": "",
          "type": "enum(open, unshipped, unpaid, completed, processing, all)"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "transactions_r"
    },
    "searchAllShopReceipts": {
      "description": "Searches the set of Receipt objects associated to a Shop by a query",
      "method": "GET",
      "uri": "/shops/:shop_id/receipts/search",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "search_query": {
          "required": true,
          "default": "",
          "type": "string"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "transactions_r"
    },
    "findAllUserBuyerReceipts": {
      "description": "Retrieves a set of Receipt objects associated to a User.",
      "method": "GET",
      "uri": "/users/:user_id/receipts",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "transactions_r"
    }
  }
},
"ReceiptShipment": {
  "description": "Represents a distinct shipment for an order.This resource has no associations.This resource has no methods.",
  "fields": {
    "carrier_name": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "Shipping carrier name."
    },
    "receipt_shipping_id": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "Receipt shipping id used internally"
    },
    "tracking_code": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "Tracking code for carrier."
    },
    "tracking_url": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "Tracking URL for carrier's website."
    },
    "buyer_note": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "Optional note sent to buyer."
    },
    "notification_date": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "Date the notification was sent."
    }
  },
  "associations": {},
  "methods": {}
},
"Region": {
  "description": "Represents a collection of countries to which an item ships.This resource has no associations.",
  "fields": {
    "region_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of this region."
    },
    "region_name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The name of the region."
    },
    "is_dead": {
      "visibility": "public",
      "scope": "none",
      "type": "boolean",
      "description": "The eligibilty of this region to be used"
    }
  },
  "associations": {},
  "methods": {
    "findAllRegion": {
      "description": "Finds all Region.",
      "method": "GET",
      "uri": "/regions",
      "parameters": {},
      "oauth": false,
      "scope": "none"
    },
    "getRegion": {
      "description": "Retrieves a Region by id.",
      "method": "GET",
      "uri": "/regions/:region_id",
      "parameters": {
        "region_id": {
          "required": true,
          "default": "",
          "type": "array(int)"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "findEligibleRegions": {
      "description": "",
      "method": "GET",
      "uri": "/regions/eligible",
      "parameters": {},
      "oauth": false,
      "scope": "none"
    }
  }
},
"Segment": {
  "description": "A Marketplace Browse Segment - The model which maps to the hierarchical marketplace segment names visible\n            on the left side of Etsy.com and inside of pages starting with /browse. More information is in this\n            Etsy News Blog post.",
  "fields": {
    "name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The formatted name for this Segment"
    },
    "path": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The sequence of slugified names leading up to (and including) this Segment, separated by period characters"
    },
    "short_name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The slugified name of this Segment"
    },
    "has_children": {
      "visibility": "public",
      "scope": "none",
      "type": "boolean",
      "description": "Whether this Segment has more Segments under it"
    },
    "image_url": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "(Optional) A fullxfull image representing this Segment"
    },
    "shop_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "(Optional) The shop_id of the Shop from which the image_url was chosen"
    },
    "shop_name": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "(Optional) The name of the Shop from which the image_url was chosen"
    },
    "listing_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "(Optional) The id of the listing from which the image_url was chosen."
    }
  },
  "associations": {
    "MainImage": {
      "visibility": "public",
      "scope": "none",
      "type": "ListingImage",
      "description": "The main image for the listing."
    }
  },
  "methods": {
    "findBrowseSegments": {
      "description": "Find all Browse Segments",
      "method": "GET",
      "uri": "/segments",
      "parameters": {
        "region": {
          "required": false,
          "default": "US",
          "type": "string"
        },
        "path": {
          "required": false,
          "default": "",
          "type": "string"
        }
      },
      "oauth": false,
      "scope": "none"
    }
  }
},
"SegmentPoster": {
  "description": "A Marketplace Browse Segment Poster which represents a set of Marketplace Browse Segments\n        - These represent the curated pages that sometimes appear inside of Browse Pages, full of both links to segments\n        below the level of the current path, and images to represent each curated sub-segment. More information is in this\n        Etsy News Blog post.This resource has no associations.",
  "fields": {
    "name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The formatted name for this SegmentPoster"
    },
    "path": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The sequence of slugified names leading to a Segment represented by this SegmentPoster"
    },
    "image_url": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "A fullxfull image representing this SegmentPoster's content"
    },
    "shop_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "(Optional) The id of the Shop from which the image_url was chosen"
    },
    "shop_name": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "(Optional) The name of the Shop from which the image_url was chosen"
    },
    "weight": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "A number starting at 1 representing how prominent this SegmentPoster is relative to other SegmentPosters"
    },
    "listing_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "(Optional) The id of the listing from which the image_url was chosen."
    }
  },
  "associations": {},
  "methods": {
    "findBrowseSegmentPosters": {
      "description": "Find Browse SegmentPosters by Segment slug",
      "method": "GET",
      "uri": "/segments/posters",
      "parameters": {
        "path": {
          "required": false,
          "default": "",
          "type": "string"
        }
      },
      "oauth": false,
      "scope": "none"
    }
  }
},
"ShippingInfo": {
  "description": "Shipping fees for a listing and a specific destination.The diagram below is an ERD of the relevant portion of the database related to Listings.  Each Listing has a User,  and each User can have 0 or more ShippingTemplates.  We are enforcing that a user create at least one ShippingTemplate before creating a listing.   When that Listing is created the ShippingTemplate gets copied into the ShippingInfo table and is associated to that Listing.  You can then edit the ShippingInfo directly for a listing,  or update your ShippingTemplate and update the Listing with it.",
  "fields": {
    "shipping_info_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of this shipping info record."
    },
    "origin_country_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of the country from which the listing ships."
    },
    "destination_country_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of the country to which the listing ships (optional). If missing, these fees apply to all destinations."
    },
    "currency_code": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Identifies the currency unit for shipping fees (currently, always 'USD')."
    },
    "primary_cost": {
      "visibility": "public",
      "scope": "none",
      "type": "float",
      "description": "The shipping fee for this item, if shipped alone."
    },
    "secondary_cost": {
      "visibility": "public",
      "scope": "none",
      "type": "float",
      "description": "The shipping fee for this item, if shipped with another item."
    },
    "listing_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of the listing to which this shipping info applies."
    },
    "region_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of the region to which this shipping info applies (optional). If missing, no region is selected.  Regions are shorthand for lists of individual countries."
    },
    "origin_country_name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The name of the country from which this item ships."
    },
    "destination_country_name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The name of the country to which this item ships."
    }
  },
  "associations": {
    "DestinationCountry": {
      "visibility": "public",
      "scope": "none",
      "type": "Country",
      "description": "The full Country record for the shipping destination."
    },
    "OriginCountry": {
      "visibility": "public",
      "scope": "none",
      "type": "Country",
      "description": "The full Country record for the shipping origin."
    },
    "Region": {
      "visibility": "public",
      "scope": "none",
      "type": "Region",
      "description": "The full Region record for the shipping destination region."
    }
  },
  "methods": {
    "findAllListingShippingProfileEntries": {
      "description": "Retrieves a set of ShippingProfileEntries objects associated to a Listing.",
      "method": "GET",
      "uri": "/listings/:listing_id/shipping/info",
      "parameters": {},
      "oauth": false,
      "scope": "none"
    },
    "createShippingInfo": {
      "description": "Creates a new ShippingInfo.",
      "method": "POST",
      "uri": "/listings/:listing_id/shipping/info",
      "parameters": {
        "destination_country_id": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "primary_cost": {
          "required": true,
          "default": "",
          "type": "float"
        },
        "secondary_cost": {
          "required": true,
          "default": "",
          "type": "float"
        },
        "region_id": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    },
    "getShippingInfo": {
      "description": "Retrieves a ShippingInfo by id.",
      "method": "GET",
      "uri": "/shipping/info/:shipping_info_id",
      "parameters": {
        "shipping_info_id": {
          "required": true,
          "default": "",
          "type": "array(int)"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    },
    "updateShippingInfo": {
      "description": "Updates a ShippingInfo with the given id.",
      "method": "PUT",
      "uri": "/shipping/info/:shipping_info_id",
      "parameters": {
        "shipping_info_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "destination_country_id": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "primary_cost": {
          "required": false,
          "default": "",
          "type": "float"
        },
        "secondary_cost": {
          "required": false,
          "default": "",
          "type": "float"
        },
        "region_id": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "listing_id": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    },
    "deleteShippingInfo": {
      "description": "Deletes the ShippingInfo with the given id.",
      "method": "DELETE",
      "uri": "/shipping/info/:shipping_info_id",
      "parameters": {
        "shipping_info_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    }
  }
},
"ShippingOption": {
  "description": "Represents a shipping option for a cart.This resource has no associations.This resource has no methods.",
  "fields": {
    "shipping_option_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of the shipping option."
    },
    "value": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The name of the shipping option."
    },
    "price": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The total cart shipping price if the shipping option is selected."
    },
    "currency_code": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The ISO (alphabetic) code for the shipping option's currency."
    }
  },
  "associations": {},
  "methods": {}
},
"ShippingTemplate": {
  "description": "Represents a template used to set a listing's shipping information.The diagram below is an ERD of the relevant portion of the database related to Listings.  Each Listing has a User,  and each User can have 0 or more ShippingTemplates.  We are enforcing that a user create at least one ShippingTemplate before creating a listing.   When that Listing is created the ShippingTemplate gets copied into the ShippingInfo table and is associated to that Listing.  You can then edit the ShippingInfo directly for a listing,  or update your ShippingTemplate and update the Listing with it.",
  "fields": {
    "shipping_template_id": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "int",
      "description": "The numeric ID of this shipping template."
    },
    "title": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "string",
      "description": "The name of this shipping template."
    },
    "user_id": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "int",
      "description": "The numeric ID of the user who owns this shipping template."
    },
    "min_processing_days": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "int",
      "description": "The minimum number of days for processing the listing."
    },
    "max_processing_days": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "int",
      "description": "The maximum number of days for processing the listing."
    },
    "processing_days_display_label": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "string",
      "description": "Translated display label for processing days."
    },
    "origin_country_id": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "int",
      "description": "The numeric ID of the country from which the listing ships."
    }
  },
  "associations": {
    "Entries": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "array(ShippingTemplateEntry)",
      "description": "An array of shipping info entries that belong to this template."
    },
    "Upgrades": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "array(ShippingUpgrade)",
      "description": "An array of shipping upgrades for this shipping template."
    }
  },
  "methods": {
    "createShippingTemplate": {
      "description": "Creates a new ShippingTemplate",
      "method": "POST",
      "uri": "/shipping/templates",
      "parameters": {
        "title": {
          "required": true,
          "default": "",
          "type": "string"
        },
        "origin_country_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "destination_country_id": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "primary_cost": {
          "required": true,
          "default": "",
          "type": "float"
        },
        "secondary_cost": {
          "required": true,
          "default": "",
          "type": "float"
        },
        "destination_region_id": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "min_processing_days": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "max_processing_days": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    },
    "getShippingTemplate": {
      "description": "Retrieves a ShippingTemplate by id.",
      "method": "GET",
      "uri": "/shipping/templates/:shipping_template_id",
      "parameters": {
        "shipping_template_id": {
          "required": true,
          "default": "",
          "type": "array(int)"
        }
      },
      "oauth": true,
      "scope": "listings_r"
    },
    "updateShippingTemplate": {
      "description": "Updates a ShippingTemplate",
      "method": "PUT",
      "uri": "/shipping/templates/:shipping_template_id",
      "parameters": {
        "shipping_template_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "title": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "origin_country_id": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "min_processing_days": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "max_processing_days": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    },
    "deleteShippingTemplate": {
      "description": "Deletes the ShippingTemplate with the given id.",
      "method": "DELETE",
      "uri": "/shipping/templates/:shipping_template_id",
      "parameters": {
        "shipping_template_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    },
    "findAllShippingTemplateEntries": {
      "description": "Retrieves a set of ShippingTemplateEntry objects associated to a ShippingTemplate.",
      "method": "GET",
      "uri": "/shipping/templates/:shipping_template_id/entries",
      "parameters": {
        "shipping_template_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "listings_r"
    },
    "findAllUserShippingProfiles": {
      "description": "Retrieves a set of ShippingTemplate objects associated to a User.",
      "method": "GET",
      "uri": "/users/:user_id/shipping/templates",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        }
      },
      "oauth": true,
      "scope": "none"
    }
  }
},
"ShippingTemplateEntry": {
  "description": "Represents one entry in a shipping template.The diagram below is an ERD of the relevant portion of the database related to Listings.  Each Listing has a User,  and each User can have 0 or more ShippingTemplates.  We are enforcing that a user create at least one ShippingTemplate before creating a listing.   When that Listing is created the ShippingTemplate gets copied into the ShippingInfo table and is associated to that Listing.  You can then edit the ShippingInfo directly for a listing,  or update your ShippingTemplate and update the Listing with it.",
  "fields": {
    "shipping_template_entry_id": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "int",
      "description": "The numeric ID of this shipping template entry."
    },
    "shipping_template_id": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "int",
      "description": "The numeric ID of the template this entry belongs to."
    },
    "currency_code": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "string",
      "description": "The currency code for the prices in this template entry."
    },
    "origin_country_id": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "int",
      "description": "The numeric ID of the country from which the listing ships."
    },
    "destination_country_id": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "int",
      "description": "The numeric ID of the country to which the listing ships (optional).  If missing, these fees apply to all destinations."
    },
    "destination_region_id": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "int",
      "description": "The numeric ID of the region to which the listing ships (optional).  Regions are collections of countries."
    },
    "primary_cost": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "float",
      "description": "The shipping fee for this item, if shipped alone."
    },
    "secondary_cost": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "float",
      "description": "The shipping fee for this item, if shipped with another item."
    }
  },
  "associations": {
    "OriginCountry": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "Country",
      "description": "The full Country record for the shipping origin."
    },
    "DestinationCountry": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "Country",
      "description": "The full Country record for the shipping destination."
    },
    "DestinationRegion": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "Region",
      "description": "The full Region record for the shipping destination region."
    },
    "Template": {
      "visibility": "private",
      "scope": "listings_r",
      "type": "ShippingTemplate",
      "description": "The template to which this entry belongs."
    }
  },
  "methods": {
    "createShippingTemplateEntry": {
      "description": "Creates a new ShippingTemplateEntry",
      "method": "POST",
      "uri": "/shipping/templates/entries",
      "parameters": {
        "shipping_template_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "destination_country_id": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "primary_cost": {
          "required": true,
          "default": "",
          "type": "float"
        },
        "secondary_cost": {
          "required": true,
          "default": "",
          "type": "float"
        },
        "destination_region_id": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    },
    "getShippingTemplateEntry": {
      "description": "Retrieves a ShippingTemplateEntry by id.",
      "method": "GET",
      "uri": "/shipping/templates/entries/:shipping_template_entry_id",
      "parameters": {
        "shipping_template_entry_id": {
          "required": true,
          "default": "",
          "type": "array(int)"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    },
    "updateShippingTemplateEntry": {
      "description": "Updates a ShippingTemplateEntry",
      "method": "PUT",
      "uri": "/shipping/templates/entries/:shipping_template_entry_id",
      "parameters": {
        "shipping_template_entry_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "destination_country_id": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "primary_cost": {
          "required": false,
          "default": "",
          "type": "float"
        },
        "secondary_cost": {
          "required": false,
          "default": "",
          "type": "float"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    },
    "deleteShippingTemplateEntry": {
      "description": "Deletes the ShippingTemplateEntry",
      "method": "DELETE",
      "uri": "/shipping/templates/entries/:shipping_template_entry_id",
      "parameters": {
        "shipping_template_entry_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    }
  }
},
"ShippingUpgrade": {
  "description": "Represents shipping upgrade info.This resource has no associations.",
  "fields": {
    "shipping_profile_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "Identifier for the parent shipping profile"
    },
    "value_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "Identifier for the value"
    },
    "value": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Name of the shipping upgrade, e.g. USPS Priority"
    },
    "price": {
      "visibility": "public",
      "scope": "none",
      "type": "float",
      "description": "Additional cost of adding the shipping upgrade"
    },
    "secondary_price": {
      "visibility": "public",
      "scope": "none",
      "type": "float",
      "description": "Additional cost of adding the shipping upgrade with another item"
    },
    "currency_code": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Currency for the price"
    },
    "type": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "Domestic (0) or international (1)"
    },
    "order": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "Display order"
    },
    "language": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "Language code"
    }
  },
  "associations": {},
  "methods": {
    "getListingShippingUpgrades": {
      "description": "Get the shipping upgrades available for a listing.",
      "method": "GET",
      "uri": "/listings/:listing_id/shipping/upgrades",
      "parameters": {
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "listings_r"
    },
    "createListingShippingUpgrade": {
      "description": "Creates a new ShippingUpgrade for the listing. Will unlink the listing if linked to a ShippingTemplate.",
      "method": "POST",
      "uri": "/listings/:listing_id/shipping/upgrades",
      "parameters": {
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "type": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "value": {
          "required": true,
          "default": "",
          "type": "string"
        },
        "price": {
          "required": true,
          "default": "",
          "type": "float"
        },
        "secondary_price": {
          "required": true,
          "default": "",
          "type": "float"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    },
    "updateListingShippingUpgrade": {
      "description": "Updates a ShippingUpgrade on a listing. Will unlink the listing if linked to a ShippingTemplate.",
      "method": "PUT",
      "uri": "/listings/:listing_id/shipping/upgrades",
      "parameters": {
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "value_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "type": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "price": {
          "required": true,
          "default": "",
          "type": "float"
        },
        "secondary_price": {
          "required": true,
          "default": "",
          "type": "float"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    },
    "deleteListingShippingUpgrade": {
      "description": "Deletes the ShippingUpgrade from the listing. Will unlink the listing if linked to a ShippingTemplate.",
      "method": "DELETE",
      "uri": "/listings/:listing_id/shipping/upgrades",
      "parameters": {
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "value_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "type": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    },
    "findAllShippingTemplateUpgrades": {
      "description": "Retrieves a list of shipping upgrades for the parent ShippingTemplate",
      "method": "GET",
      "uri": "/shipping/templates/:shipping_template_id/upgrades",
      "parameters": {
        "shipping_template_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "listings_r"
    },
    "createShippingTemplateUpgrade": {
      "description": "Creates a new ShippingUpgrade for the parent ShippingTemplate. Updates any listings linked to the ShippingTemplate.",
      "method": "POST",
      "uri": "/shipping/templates/:shipping_template_id/upgrades",
      "parameters": {
        "shipping_template_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "type": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "value": {
          "required": true,
          "default": "",
          "type": "string"
        },
        "price": {
          "required": true,
          "default": "",
          "type": "float"
        },
        "secondary_price": {
          "required": true,
          "default": "",
          "type": "float"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    },
    "updateShippingTemplateUpgrade": {
      "description": "Updates a ShippingUpgrade of the parent ShippingTemplate. Updates any listings linked to the ShippingTemplate.",
      "method": "PUT",
      "uri": "/shipping/templates/:shipping_template_id/upgrades",
      "parameters": {
        "shipping_template_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "value_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "type": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "price": {
          "required": true,
          "default": "",
          "type": "float"
        },
        "secondary_price": {
          "required": true,
          "default": "",
          "type": "float"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    },
    "deleteShippingTemplateUpgrade": {
      "description": "Deletes the ShippingUpgrade from the parent ShippingTemplate. Updates any listings linked to the ShippingTemplate.",
      "method": "DELETE",
      "uri": "/shipping/templates/:shipping_template_id/upgrades",
      "parameters": {
        "shipping_template_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "value_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "type": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    }
  }
},
"Shop": {
  "description": "Represents a shop with listings for sale.  Each shop is owned by one user.",
  "fields": {
    "shop_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The shop's numeric ID."
    },
    "shop_name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The shop's name."
    },
    "first_line": {
      "visibility": "private",
      "scope": "shops_rw",
      "type": "string",
      "description": "The first line of the shops address.\n                            DEPRECATED: use UserAddress.first_line instead."
    },
    "second_line": {
      "visibility": "private",
      "scope": "shops_rw",
      "type": "string",
      "description": "The second line of the shops address.\n                            DEPRECATED: use UserAddress.second_line instead."
    },
    "city": {
      "visibility": "private",
      "scope": "shops_rw",
      "type": "string",
      "description": "The city the shop is in.\n                            DEPRECATED: use UserAddress.city instead."
    },
    "state": {
      "visibility": "private",
      "scope": "shops_rw",
      "type": "string",
      "description": "The state the shop is in.\n                            DEPRECATED: use UserAddress.state instead."
    },
    "zip": {
      "visibility": "private",
      "scope": "shops_rw",
      "type": "string",
      "description": "The zip code the shop is in.\n                            DEPRECATED: use UserAddress.zip instead."
    },
    "country_id": {
      "visibility": "private",
      "scope": "shops_rw",
      "type": "int",
      "description": "The numeric ID of the country the shop is in.\n                            DEPRECATED: use UserAddress.country_id instead."
    },
    "user_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of the user that owns this shop."
    },
    "creation_tsz": {
      "visibility": "public",
      "scope": "none",
      "type": "float",
      "description": "The date and time the shop was created, in epoch seconds."
    },
    "title": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "A brief heading for the shop's main page."
    },
    "announcement": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "An announcement to buyers that displays on the shop's homepage."
    },
    "currency_code": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The ISO code (alphabetic) for the seller's native currency."
    },
    "is_vacation": {
      "visibility": "public",
      "scope": "none",
      "type": "boolean",
      "description": "If the seller is not currently accepting purchases, 1, blank otherwise."
    },
    "vacation_message": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "If is_vacation=1, a message to buyers."
    },
    "sale_message": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "A message that is sent to users who buy from this shop."
    },
    "digital_sale_message": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "A message that is sent to users who buy a digital item from this shop."
    },
    "last_updated_tsz": {
      "visibility": "public",
      "scope": "none",
      "type": "float",
      "description": "The date and time the shop was last updated, in epoch seconds."
    },
    "listing_active_count": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The number of active listings in the shop."
    },
    "login_name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The user's login name."
    },
    "lat": {
      "visibility": "private",
      "scope": "shops_rw",
      "type": "float",
      "description": "The latitude of the shop."
    },
    "lon": {
      "visibility": "private",
      "scope": "shops_rw",
      "type": "float",
      "description": "The longitude of the shop."
    },
    "accepts_custom_requests": {
      "visibility": "public",
      "scope": "none",
      "type": "boolean",
      "description": "True if the shop accepts requests for custom items."
    },
    "policy_welcome": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The introductory text from the top of the seller's policies page (may be blank)."
    },
    "policy_payment": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The seller's policy on payment (may be blank)."
    },
    "policy_shipping": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The seller's policy on shipping (may be blank)."
    },
    "policy_refunds": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The seller's policy on refunds (may be blank)."
    },
    "policy_additional": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Any additional policy information the seller provides (may be blank)."
    },
    "policy_seller_info": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The shop's seller information (may be blank)."
    },
    "policy_updated_tsz": {
      "visibility": "public",
      "scope": "none",
      "type": "float",
      "description": "The date and time the shop was last updated, in epoch seconds."
    },
    "vacation_autoreply": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "If is_vacation=1, a message to buyers in response to new convos."
    },
    "ga_code": {
      "visibility": "private",
      "scope": "shops_rw",
      "type": "string",
      "description": "The shop's Google Analytics code."
    },
    "name": {
      "visibility": "private",
      "scope": "shops_rw",
      "type": "string",
      "description": "The shop owner's real name.\n                            DEPRECATED: use UserAddress.name instead."
    },
    "url": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The URL of the shop"
    },
    "image_url_760x100": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The URL to the shop's banner image."
    },
    "num_favorers": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The number of members who've marked this Shop as a favorite"
    },
    "languages": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The languages that this Shop is enrolled in."
    }
  },
  "associations": {
    "User": {
      "visibility": "public",
      "scope": "none",
      "type": "User",
      "description": "The user who owns this shop."
    },
    "About": {
      "visibility": "public",
      "scope": "none",
      "type": "ShopAbout",
      "description": "Detailed data about this shop."
    },
    "Sections": {
      "visibility": "public",
      "scope": "none",
      "type": "array(ShopSection)",
      "description": "An array of sections within the shop.  Each section holds listings."
    },
    "Listings": {
      "visibility": "public",
      "scope": "none",
      "type": "array(Listing)",
      "description": "An array of listings within the shop.  (Must be used with scope \"active\", e.g.: Listings:active).(NOTE: If calling on behalf of a shop owner in the context of listing management, you may include the parameter include_private=true to return private listings. This is an experimental feature and may change.)"
    },
    "Receipts": {
      "visibility": "private",
      "scope": "shops_rw",
      "type": "array(Receipt)",
      "description": "An array of receipts (one per buyer) for this shop."
    },
    "Transactions": {
      "visibility": "private",
      "scope": "shops_rw",
      "type": "array(Transaction)",
      "description": "An array of transactions (sold items) for this shop."
    },
    "Translations": {
      "visibility": "public",
      "scope": "none",
      "type": "array(ShopTranslation)",
      "description": "An array of translations for this Shop."
    }
  },
  "methods": {
    "findAllShops": {
      "description": "Finds all Shops.  If there is a keywords parameter, finds shops with shop_name starting with keywords.",
      "method": "GET",
      "uri": "/shops",
      "parameters": {
        "shop_name": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "lat": {
          "required": false,
          "default": "",
          "type": "latitude"
        },
        "lon": {
          "required": false,
          "default": "",
          "type": "longitude"
        },
        "distance_max": {
          "required": false,
          "default": "35",
          "type": "float"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "getShop": {
      "description": "Retrieves a Shop by id.",
      "method": "GET",
      "uri": "/shops/:shop_id",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "array(shop_id_or_name)"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "updateShop": {
      "description": "Updates a Shop",
      "method": "PUT",
      "uri": "/shops/:shop_id",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "title": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "announcement": {
          "required": false,
          "default": "",
          "type": "text"
        },
        "sale_message": {
          "required": false,
          "default": "",
          "type": "text"
        },
        "policy_welcome": {
          "required": false,
          "default": "",
          "type": "text"
        },
        "policy_payment": {
          "required": false,
          "default": "",
          "type": "text"
        },
        "policy_shipping": {
          "required": false,
          "default": "",
          "type": "text"
        },
        "policy_refunds": {
          "required": false,
          "default": "",
          "type": "text"
        },
        "policy_additional": {
          "required": false,
          "default": "",
          "type": "text"
        },
        "policy_seller_info": {
          "required": false,
          "default": "",
          "type": "text"
        },
        "digital_sale_message": {
          "required": false,
          "default": "",
          "type": "text"
        }
      },
      "oauth": true,
      "scope": "shops_rw"
    },
    "uploadShopBanner": {
      "description": "Upload a new shop banner image",
      "method": "POST",
      "uri": "/shops/:shop_id/appearance/banner",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "image": {
          "required": true,
          "default": "",
          "type": "imagefile"
        }
      },
      "oauth": true,
      "scope": "shops_rw"
    },
    "deleteShopBanner": {
      "description": "Deletes a shop banner image",
      "method": "DELETE",
      "uri": "/shops/:shop_id/appearance/banner",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        }
      },
      "oauth": true,
      "scope": "shops_rw"
    },
    "getListingShop": {
      "description": "Retrieves a shop by a listing id.",
      "method": "GET",
      "uri": "/shops/listing/:listing_id",
      "parameters": {
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "findAllUserShops": {
      "description": "Retrieves a set of Shop objects associated to a User.",
      "method": "GET",
      "uri": "/users/:user_id/shops",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    }
  }
},
"ShopAbout": {
  "description": "Data about a user's shop.",
  "fields": {
    "shop_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "Numeric ID of the shop section."
    },
    "status": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Status of this data: active or draft. Only Shop owners can see drafts."
    },
    "story_headline": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "ShopAbout headline text"
    },
    "story_leading_paragraph": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The first part of the ShopAbout story"
    },
    "story": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The full ShopAbout story text"
    },
    "related_links": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The ShopAbout related links"
    }
  },
  "associations": {
    "Shop": {
      "visibility": "public",
      "scope": "none",
      "type": "Shop",
      "description": "The shop this detail data belongs to"
    },
    "Members": {
      "visibility": "public",
      "scope": "none",
      "type": "array(ShopAboutMember)",
      "description": "The ShopAboutMembers of this Shop"
    },
    "Images": {
      "visibility": "public",
      "scope": "none",
      "type": "array(ShopAboutImages)",
      "description": "An array of images to be included with ShopAbout details"
    }
  },
  "methods": {
    "getShopAbout": {
      "description": "Retrieves a ShopAbout object associated to a Shop.",
      "method": "GET",
      "uri": "/shops/:shop_id/about",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        }
      },
      "oauth": false,
      "scope": "none"
    }
  }
},
"ShopAboutImage": {
  "description": "Data about a user's shopThis resource has no associations.This resource has no methods.",
  "fields": {
    "shop_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "Numeric ID of the shop"
    },
    "image_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "Numeric ID of the image record"
    },
    "caption": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Description of this ShopAboutImage"
    },
    "rank": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The order of this image in a list"
    },
    "url_178x178": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The url to a thumbnail of the image, exactly 178px by 178px."
    },
    "url_545xN": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The url to a thumbnail of the image, no more than 545px width by variable height."
    },
    "url_760xN": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The url to a thumbnail of the image, no more than 760px width by variable height."
    },
    "url_fullxfull": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The url to the full-size image, no more than 1500px width by variable height."
    }
  },
  "associations": {},
  "methods": {}
},
"ShopAboutMember": {
  "description": "Data about a user's shop.This resource has no associations.This resource has no methods.",
  "fields": {
    "shop_about_member_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "Numeric ID of this ShopAboutMember"
    },
    "shop_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "Numeric ID of the associated Shop"
    },
    "name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The name of this ShopAboutMember"
    },
    "role": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The role of this ShopAboutMember"
    },
    "bio": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The bio of this ShopAboutMember"
    },
    "rank": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The order of this member in a list"
    },
    "is_owner": {
      "visibility": "public",
      "scope": "none",
      "type": "boolean",
      "description": "Whether this Member is an owner. A Shop can have multiple owners."
    },
    "url_90x90": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The url to a thumbnail of the image, exactly 90px by 90px."
    },
    "url_190x190": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The url to a thumbnail of the image, exactly 190px by 190px."
    },
    "has_stale_translations": {
      "visibility": "public",
      "scope": "none",
      "type": "boolean",
      "description": "Whether the shop member translations need to be updated"
    }
  },
  "associations": {},
  "methods": {}
},
"ShopSection": {
  "description": "A section within a user's shop.",
  "fields": {
    "shop_section_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of the shop section."
    },
    "title": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The title of the section."
    },
    "rank": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "Display order."
    },
    "user_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The ID of the user who owns this shop section."
    },
    "active_listing_count": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The number of active listings currently in the section."
    }
  },
  "associations": {
    "Shop": {
      "visibility": "public",
      "scope": "none",
      "type": "Shop",
      "description": "The shop to which this section belongs."
    },
    "Listings": {
      "visibility": "public",
      "scope": "none",
      "type": "array(Listing)",
      "description": "An array of listings in this section."
    },
    "Translations": {
      "visibility": "public",
      "scope": "none",
      "type": "array(ShopSectionTranslation)",
      "description": "An array of translations for this ShopSection."
    }
  },
  "methods": {
    "findAllShopSections": {
      "description": "Retrieves a set of ShopSection objects associated to a Shop.",
      "method": "GET",
      "uri": "/shops/:shop_id/sections",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "createShopSection": {
      "description": "Creates a new ShopSection.",
      "method": "POST",
      "uri": "/shops/:shop_id/sections",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "title": {
          "required": false,
          "default": "",
          "type": "text"
        },
        "user_id": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "shops_rw"
    },
    "getShopSection": {
      "description": "Retrieves a ShopSection by id and shop_id",
      "method": "GET",
      "uri": "/shops/:shop_id/sections/:shop_section_id",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "shop_section_id": {
          "required": true,
          "default": "",
          "type": "array(int)"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "updateShopSection": {
      "description": "Updates a ShopSection with the given id.",
      "method": "PUT",
      "uri": "/shops/:shop_id/sections/:shop_section_id",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "shop_section_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "title": {
          "required": false,
          "default": "",
          "type": "text"
        },
        "user_id": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "shops_rw"
    },
    "deleteShopSection": {
      "description": "Deletes the ShopSection with the given id.",
      "method": "DELETE",
      "uri": "/shops/:shop_id/sections/:shop_section_id",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "shop_section_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "shops_rw"
    }
  }
},
"ShopSectionTranslation": {
  "description": "Represents the translation data for a ShopSection.",
  "fields": {
    "shop_section_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID for the ShopSection."
    },
    "language": {
      "visibility": "public",
      "scope": "none",
      "type": "language",
      "description": "The IETF language tag (e.g. 'fr') for the language of this translation."
    },
    "title": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Translation of title of ShopSection."
    }
  },
  "associations": {
    "ShopSection": {
      "visibility": "public",
      "scope": "none",
      "type": "ShopSection",
      "description": "The ShopSection this translation belongs to."
    }
  },
  "methods": {
    "getShopSectionTranslation": {
      "description": "Retrieves a ShopSectionTranslation by shop_id, shop_section_id and language",
      "method": "GET",
      "uri": "/shops/:shop_id/sections/:shop_section_id/translations/:language",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "shop_section_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "language": {
          "required": true,
          "default": "",
          "type": "language"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "createShopSectionTranslation": {
      "description": "Creates a ShopSectionTranslation by shop_id, shop_section_id and language",
      "method": "POST",
      "uri": "/shops/:shop_id/sections/:shop_section_id/translations/:language",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "shop_section_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "language": {
          "required": true,
          "default": "",
          "type": "language"
        },
        "title": {
          "required": false,
          "default": "",
          "type": "string"
        }
      },
      "oauth": true,
      "scope": "shops_rw"
    },
    "updateShopSectionTranslation": {
      "description": "Updates a ShopSectionTranslation by shop_id, shop_section_id and language",
      "method": "PUT",
      "uri": "/shops/:shop_id/sections/:shop_section_id/translations/:language",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "shop_section_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "language": {
          "required": true,
          "default": "",
          "type": "language"
        },
        "title": {
          "required": false,
          "default": "",
          "type": "string"
        }
      },
      "oauth": true,
      "scope": "shops_rw"
    },
    "deleteShopSectionTranslation": {
      "description": "Deletes a ShopSectionTranslation by shop_id, shop_section_id and language",
      "method": "DELETE",
      "uri": "/shops/:shop_id/sections/:shop_section_id/translations/:language",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "shop_section_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "language": {
          "required": true,
          "default": "",
          "type": "language"
        }
      },
      "oauth": true,
      "scope": "shops_rw"
    }
  }
},
"Style": {
  "description": "A user-supplied style attached to a listing. A user can either select from suggested styles, or create custom style.This resource has no associations.",
  "fields": {
    "style_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "Style ID for this style"
    },
    "style": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Style Name"
    }
  },
  "associations": {},
  "methods": {
    "findSuggestedStyles": {
      "description": "Retrieve all suggested styles.",
      "method": "GET",
      "uri": "/taxonomy/styles",
      "parameters": {},
      "oauth": false,
      "scope": "none"
    }
  }
},
"ShopTranslation": {
  "description": "Represents the translation data for a Shop.This resource has no associations.",
  "fields": {
    "shop_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID for the Shop."
    },
    "language": {
      "visibility": "public",
      "scope": "none",
      "type": "language",
      "description": "The IETF language tag (e.g. 'fr') for the language of this translation."
    },
    "announcement": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Translation of an announcement to buyers that displays on the shop's homepage."
    },
    "policy_welcome": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Translation of the introductory text from the top of the seller's policies page (may be blank)."
    },
    "policy_payment": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Translation of the seller's policy on payment (may be blank)."
    },
    "policy_shipping": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Translation of the seller's policy on shipping (may be blank)."
    },
    "policy_refunds": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Translation of the seller's policy on refunds (may be blank)."
    },
    "policy_additional": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Translation of any additional policy information the seller provides (may be blank)."
    },
    "policy_seller_info": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Translation of the Shop's Seller information (may be blank)."
    },
    "sale_message": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Translation of a message that is sent to users who buy from this shop."
    },
    "digital_sale_message": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Translation of a message that is sent to users who buy a digital item from this shop."
    },
    "title": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Translation of a brief heading for the shop's main page."
    },
    "vacation_autoreply": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Translation of a message to buyers in response to new convos (if Shop.is_vacation is true)."
    },
    "vacation_message": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Translation of a message to buyers (if Shop.is_vacation is true)."
    }
  },
  "associations": {},
  "methods": {
    "getShopTranslation": {
      "description": "Retrieves a ShopTranslation by shop_id and language",
      "method": "GET",
      "uri": "/shops/:shop_id/translations/:language",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "language": {
          "required": true,
          "default": "",
          "type": "language"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "createShopTranslation": {
      "description": "Creates a ShopTranslation by shop_id and language",
      "method": "POST",
      "uri": "/shops/:shop_id/translations/:language",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "language": {
          "required": true,
          "default": "",
          "type": "language"
        },
        "title": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "sale_message": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "announcement": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "policy_welcome": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "policy_payment": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "policy_shipping": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "policy_refunds": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "policy_additional": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "policy_seller_info": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "vacation_autoreply": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "vacation_message": {
          "required": false,
          "default": "",
          "type": "string"
        }
      },
      "oauth": true,
      "scope": "shops_rw"
    },
    "updateShopTranslation": {
      "description": "Updates a ShopTranslation by shop_id and language",
      "method": "PUT",
      "uri": "/shops/:shop_id/translations/:language",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "language": {
          "required": true,
          "default": "",
          "type": "language"
        },
        "title": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "sale_message": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "announcement": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "policy_welcome": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "policy_payment": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "policy_shipping": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "policy_refunds": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "policy_additional": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "policy_seller_info": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "vacation_autoreply": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "vacation_message": {
          "required": false,
          "default": "",
          "type": "string"
        }
      },
      "oauth": true,
      "scope": "shops_rw"
    },
    "deleteShopTranslation": {
      "description": "Deletes a ShopTranslation by shop_id and language",
      "method": "DELETE",
      "uri": "/shops/:shop_id/translations/:language",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "language": {
          "required": true,
          "default": "",
          "type": "language"
        }
      },
      "oauth": true,
      "scope": "shops_rw"
    }
  }
},
"Team": {
  "description": "Teams represent a community of users on Etsy,\n found at www.etsy.com/teams. \n Generally, the Etsy API only exposes public teams data. Using OAuth, a team \n captain may see pending or invited team members using the \n findAllUsersForTeam method.This resource has no associations.",
  "fields": {
    "group_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The team's numeric ID."
    },
    "name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The team's name."
    },
    "create_date": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The date and time the team was created in Epoch seconds."
    },
    "update_date": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The date and time the team was last updated in Epoch seconds."
    },
    "tags": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "A list of tags describing the team."
    }
  },
  "associations": {},
  "methods": {
    "findAllTeams": {
      "description": "Returns all Teams",
      "method": "GET",
      "uri": "/teams",
      "parameters": {
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "findTeams": {
      "description": "Returns specified team by ID or team name",
      "method": "GET",
      "uri": "/teams/:team_ids/",
      "parameters": {
        "team_ids": {
          "required": true,
          "default": "",
          "type": "array(team_id_or_name)"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "findAllTeamsForUser": {
      "description": "Returns a list of teams for a specific user",
      "method": "GET",
      "uri": "/users/:user_id/teams",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    }
  }
},
"Treasury": {
  "description": "\n        The Treasury is\n        an ever-changing, member-curated shopping gallery comprised of lists of items. The\n        Etsy API allows you to retrieve, create, edit, and delete treasury lists. When\n        retrieving multiple lists with findAllTreasuries method,\n        you are limited to the 25,000 sortable hottest lists in the Treasury at\n        that time. If you need to retrieve a specific list, be sure to use the\n        getTreasury method with the corresponding treasury key.\nThis resource has no associations.",
  "fields": {
    "id": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Unique id of the collection"
    },
    "title": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Title of the collection"
    },
    "description": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Description of the collection"
    },
    "homepage": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "If the Treasury was featured on the homepage, the time in seconds since the epoch that it was featured"
    },
    "mature": {
      "visibility": "public",
      "scope": "none",
      "type": "boolean",
      "description": "Whether the Treasury has been flagged mature or not"
    },
    "private": {
      "visibility": "public",
      "scope": "none",
      "type": "boolean",
      "description": "Whether the Treasury has been set to private"
    },
    "locale": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Language/Locale of the collection"
    },
    "comment_count": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The number of comments on this Treasury"
    },
    "tags": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The tags associated with this Treasury"
    },
    "counts": {
      "visibility": "public",
      "scope": "none",
      "type": "TreasuryCounts",
      "description": "Clicks, views, shares, and reports metrics of this collection"
    },
    "hotness": {
      "visibility": "public",
      "scope": "none",
      "type": "float",
      "description": "The algorithmic ranking value assigned to this collection"
    },
    "hotness_color": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The algorithmic ranking value shown as a color (color hexadecimal)"
    },
    "user_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "ID of the user (curator) of the collection"
    },
    "user_name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Name of the user (curator) of the collection"
    },
    "user_avatar_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "ID of the user's (curator's) avatar"
    },
    "listings": {
      "visibility": "public",
      "scope": "none",
      "type": "array(TreasuryListing)",
      "description": "The listings that are in this collection"
    },
    "creation_tsz": {
      "visibility": "public",
      "scope": "none",
      "type": "float",
      "description": "Time this collection was created, in epoch seconds"
    },
    "became_public_date": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The time that this treasury was published, in epoch seconds"
    }
  },
  "associations": {},
  "methods": {
    "findAllTreasuries": {
      "description": "Search Treasuries or else List all Treasuries",
      "method": "GET",
      "uri": "/treasuries",
      "parameters": {
        "keywords": {
          "required": false,
          "default": "",
          "type": "treasury_search_string"
        },
        "sort_on": {
          "required": false,
          "default": "hotness",
          "type": "enum(hotness, created)"
        },
        "sort_order": {
          "required": false,
          "default": "down",
          "type": "enum(up, down)"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "createTreasury": {
      "description": "Create a Treasury",
      "method": "POST",
      "uri": "/treasuries",
      "parameters": {
        "title": {
          "required": true,
          "default": "",
          "type": "treasury_title"
        },
        "description": {
          "required": false,
          "default": "",
          "type": "treasury_description"
        },
        "listing_ids": {
          "required": true,
          "default": "",
          "type": "array(int)"
        },
        "tags": {
          "required": false,
          "default": "",
          "type": "array(string)"
        },
        "private": {
          "required": false,
          "default": "0",
          "type": "boolean"
        }
      },
      "oauth": true,
      "scope": "treasury_w"
    },
    "getTreasury": {
      "description": "Get a Treasury",
      "method": "GET",
      "uri": "/treasuries/:treasury_key",
      "parameters": {
        "treasury_key": {
          "required": true,
          "default": "",
          "type": "treasury_id"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "deleteTreasury": {
      "description": "Delete a Treasury",
      "method": "DELETE",
      "uri": "/treasuries/:treasury_key",
      "parameters": {},
      "oauth": true,
      "scope": "treasury_w"
    },
    "findAllUserTreasuries": {
      "description": "Get a user's Treasuries. Note: The treasury_r permission scope is required in order to display private Treasuries for a user when the boolean parameter include_private is true.",
      "method": "GET",
      "uri": "/users/:user_id/treasuries",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "sort_on": {
          "required": false,
          "default": "hotness",
          "type": "enum(hotness, created)"
        },
        "sort_order": {
          "required": false,
          "default": "down",
          "type": "enum(up, down)"
        },
        "include_private": {
          "required": false,
          "default": "0",
          "type": "boolean"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    }
  }
},
"TreasuryCounts": {
  "description": "Various metrics on the TreasuryThis resource has no associations.This resource has no methods.",
  "fields": {
    "clicks": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The number of times the Treasury has been clicked on"
    },
    "views": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The number of times the Treasury has been viewed"
    },
    "shares": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The number of times the Treasury has been shared"
    },
    "reports": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The number of times the Treasury has been reported"
    }
  },
  "associations": {},
  "methods": {}
},
"Transaction": {
  "description": "Represents the sale of a single item.",
  "fields": {
    "transaction_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID for this transaction."
    },
    "title": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The title of the listing for this transaction."
    },
    "description": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The description of the listing for this transaction."
    },
    "seller_user_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID for the seller of this transaction."
    },
    "buyer_user_id": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The numeric ID for the buyer of this transaction."
    },
    "creation_tsz": {
      "visibility": "public",
      "scope": "none",
      "type": "float",
      "description": "The date and time the transaction was created, in epoch seconds."
    },
    "paid_tsz": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "float",
      "description": "The date and time the transaction was paid, in epoch seconds."
    },
    "shipped_tsz": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "float",
      "description": "The date and time the transaction was shipped, in epoch seconds."
    },
    "price": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "float",
      "description": "The price of the transaction."
    },
    "currency_code": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "The ISO code (alphabetic) for the seller's native currency."
    },
    "quantity": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The quantity of items in this transaction."
    },
    "tags": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The tags in the listing for this transaction."
    },
    "materials": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The materials in the listing for this transaction."
    },
    "image_listing_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of the primary listing image for this transaction."
    },
    "receipt_id": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "int",
      "description": "The numeric ID for the receipt associated to this transaction."
    },
    "shipping_cost": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "float",
      "description": "The shipping cost for this transaction."
    },
    "is_digital": {
      "visibility": "public",
      "scope": "none",
      "type": "boolean",
      "description": "True if this listing is for a digital download."
    },
    "file_data": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Written description of the files attached to this digital listing."
    },
    "listing_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID for this listing associated to this transaction."
    },
    "seller_feedback_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of seller's feedback."
    },
    "buyer_feedback_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID for the buyer's feedback."
    },
    "transaction_type": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "string",
      "description": "The type of transaction, usually \"listing\"."
    },
    "url": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "URL of this transaction"
    },
    "variations": {
      "visibility": "public",
      "scope": "none",
      "type": "array(Variations_SelectedProperty)",
      "description": "Purchased variations for this transaction."
    }
  },
  "associations": {
    "Buyer": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "User",
      "description": "The buyer that is associated with this transaction."
    },
    "MainImage": {
      "visibility": "public",
      "scope": "none",
      "type": "ListingImage",
      "description": "The primary listing image for this transaction."
    },
    "Listing": {
      "visibility": "public",
      "scope": "none",
      "type": "Listing",
      "description": "The listing that is associated with this transaction."
    },
    "Seller": {
      "visibility": "public",
      "scope": "none",
      "type": "User",
      "description": "The seller that is associated with this transaction."
    },
    "Receipt": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "Receipt",
      "description": "The receipt that is associated with this transaction."
    }
  },
  "methods": {
    "getTransaction": {
      "description": "Retrieves a Transaction by id.",
      "method": "GET",
      "uri": "/transactions/:transaction_id",
      "parameters": {
        "transaction_id": {
          "required": true,
          "default": "",
          "type": "array(int)"
        }
      },
      "oauth": true,
      "scope": "transactions_r"
    },
    "findAllListingTransactions": {
      "description": "Retrieves a set of Transaction objects associated to a Listing.",
      "method": "GET",
      "uri": "/listings/:listing_id/transactions",
      "parameters": {
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "transactions_r"
    },
    "findAllReceiptTransactions": {
      "description": "Retrieves a set of Transaction objects associated to a Receipt.",
      "method": "GET",
      "uri": "/receipts/:receipt_id/transactions",
      "parameters": {
        "receipt_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "transactions_r"
    },
    "findAllShopTransactions": {
      "description": "Retrieves a set of Transaction objects associated to a Shop.",
      "method": "GET",
      "uri": "/shops/:shop_id/transactions",
      "parameters": {
        "shop_id": {
          "required": true,
          "default": "",
          "type": "shop_id_or_name"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "transactions_r"
    },
    "findAllUserBuyerTransactions": {
      "description": "Retrieves a set of Transaction objects associated to a User.",
      "method": "GET",
      "uri": "/users/:user_id/transactions",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "transactions_r"
    }
  }
},
"TreasuryListing": {
  "description": "A subset of the Listing resource stored in a TreasuryThis resource has no associations.",
  "fields": {
    "data": {
      "visibility": "public",
      "scope": "none",
      "type": "TreasuryListingData",
      "description": "The detailed fields of the listing"
    },
    "creation_tsz": {
      "visibility": "public",
      "scope": "none",
      "type": "float",
      "description": "Time the listing was added to this Treasury, in epoch seconds"
    }
  },
  "associations": {},
  "methods": {
    "addTreasuryListing": {
      "description": "Add listing to a Treasury",
      "method": "POST",
      "uri": "/treasuries/:treasury_key/listings",
      "parameters": {
        "treasury_key": {
          "required": true,
          "default": "",
          "type": "treasury_id"
        },
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "treasury_w"
    },
    "removeTreasuryListing": {
      "description": "Remove listing from a Treasury",
      "method": "DELETE",
      "uri": "/treasuries/:treasury_key/listings/:listing_id",
      "parameters": {
        "treasury_key": {
          "required": true,
          "default": "",
          "type": "treasury_id"
        },
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "treasury_w"
    }
  }
},
"TreasuryListingData": {
  "description": "The detailed fields of a TreasuryListingThis resource has no associations.This resource has no methods.",
  "fields": {
    "user_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of the user who posted the item"
    },
    "title": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The listing's title"
    },
    "price": {
      "visibility": "public",
      "scope": "none",
      "type": "float",
      "description": "The item's price (private for sold listings)"
    },
    "currency_code": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The ISO (alphabetic) code for the listing's currency"
    },
    "listing_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The ID of the listing"
    },
    "state": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Whether the listing is active or not"
    },
    "shop_name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The shop to which the listing belongs"
    },
    "image_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The ID of the main image of the listing"
    },
    "image_url_75x75": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The url to a 75x75 thumbnail of the main image."
    },
    "image_url_170x135": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The url to a 170x135 thumbnail of the main image."
    }
  },
  "associations": {},
  "methods": {}
},
"User": {
  "description": "Represents a single user of the site.",
  "fields": {
    "user_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The user's numeric ID. This is also valid as the user's shop ID."
    },
    "login_name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The user's login name."
    },
    "primary_email": {
      "visibility": "private",
      "scope": "email_r",
      "type": "string",
      "description": "The user's primary email address."
    },
    "creation_tsz": {
      "visibility": "public",
      "scope": "none",
      "type": "float",
      "description": "The date and time the user was created, in epoch seconds."
    },
    "referred_by_user_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of the user that referred this user."
    },
    "feedback_info": {
      "visibility": "public",
      "scope": "none",
      "type": "FeedbackInfo",
      "description": "An associative array of feedback totals for the user."
    },
    "awaiting_feedback_count": {
      "visibility": "private",
      "scope": "none",
      "type": "int",
      "description": "The total number of transactions the user has available for a new review."
    }
  },
  "associations": {
    "Shops": {
      "visibility": "public",
      "scope": "none",
      "type": "array(Shop)",
      "description": "An array of shops that belong to the user."
    },
    "Profile": {
      "visibility": "public",
      "scope": "none",
      "type": "UserProfile",
      "description": "The user's public profile."
    },
    "BuyerReceipts": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "array(Receipt)",
      "description": "An array of receipts for listings this user has purchased."
    },
    "BuyerTransactions": {
      "visibility": "private",
      "scope": "transactions_r",
      "type": "array(Transaction)",
      "description": "An array of transactions (sold listings) this user has purchased."
    },
    "Addresses": {
      "visibility": "private",
      "scope": "profile_r",
      "type": "array(UserAddress)",
      "description": "A user's Addresses."
    },
    "Charges": {
      "visibility": "private",
      "scope": "billing_r",
      "type": "array(BillCharge)",
      "description": "A user's (buyer's) Charges."
    },
    "Payments": {
      "visibility": "private",
      "scope": "billing_r",
      "type": "array(BillPayment)",
      "description": "A user's (buyer's) Payments."
    }
  },
  "methods": {
    "findAllUsers": {
      "description": "Finds all Users whose name or username match the keywords parameter.",
      "method": "GET",
      "uri": "/users",
      "parameters": {
        "keywords": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "getUser": {
      "description": "Retrieves a User by id.",
      "method": "GET",
      "uri": "/users/:user_id",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "array(user_id_or_name)"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "findAllUsersForTeam": {
      "description": "Returns a list of users for a specific team",
      "method": "GET",
      "uri": "/teams/:team_id/users/",
      "parameters": {
        "team_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "status": {
          "required": false,
          "default": "active",
          "type": "enum(active, invited, pending)"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "getCirclesContainingUser": {
      "description": "Returns a list of users who have circled this user",
      "method": "GET",
      "uri": "/users/:user_id/circles",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "getConnectedUser": {
      "description": "Returns details about a connection between users",
      "method": "GET",
      "uri": "/users/:user_id/circles/:to_user_id",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "to_user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "unconnectUsers": {
      "description": "Removes a user (to_user_id) from the logged in user's (user_id) circle",
      "method": "DELETE",
      "uri": "/users/:user_id/circles/:to_user_id",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "to_user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        }
      },
      "oauth": true,
      "scope": "profile_w"
    },
    "getConnectedUsers": {
      "description": "Returns a list of users that are in this user's cricle",
      "method": "GET",
      "uri": "/users/:user_id/connected_users",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "connectUsers": {
      "description": "Adds user (to_user_id) to the user's (user_id) circle",
      "method": "POST",
      "uri": "/users/:user_id/connected_users",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "to_user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        }
      },
      "oauth": true,
      "scope": "profile_w"
    }
  }
},
"UserAddress": {
  "description": "\n    Represents a user's address.\n\n    When creating an address using the createUserAddress method, state is a required field if the country is US, Canada, or Australia. For these countries, the value for the state must be one of these abbreviations:\n\n    \n        United States: AL, AK, AS, AZ, AR, CA, CO, CT, DE, DC, FM, FL, GA, GU, HI, ID, IL, IN, IA, KS, KY, LA, ME, MH, MD, MA, MI, MN, MS, MO, MT, NE, NV, NH, NJ, NM, NY, NC, ND, MP, OH, OK, OR, PW, PA, PR, RI, SC, SD, TN, TX, UT, VT, VI, VA, WA, WV, WI, WY, AA, AE, AP\n        Canada: AB, BC, MB, NB, NL, NT, NS, NU, ON, PE, QC, SK, YT\n        Australia: ACT, NSW, NT, QLD, SA, TAS, VIC, WA\n    \n",
  "fields": {
    "user_address_id": {
      "visibility": "private",
      "scope": "address_r",
      "type": "int",
      "description": "The numeric ID of the user's address."
    },
    "user_id": {
      "visibility": "private",
      "scope": "address_r",
      "type": "int",
      "description": "The user's numeric ID."
    },
    "name": {
      "visibility": "private",
      "scope": "address_r",
      "type": "text",
      "description": "The user's name for this address."
    },
    "first_line": {
      "visibility": "private",
      "scope": "address_r",
      "type": "text",
      "description": "The first line of the user's address."
    },
    "second_line": {
      "visibility": "private",
      "scope": "address_r",
      "type": "text",
      "description": "The second line of the user's address."
    },
    "city": {
      "visibility": "private",
      "scope": "address_r",
      "type": "text",
      "description": "The city field of the user's address."
    },
    "state": {
      "visibility": "private",
      "scope": "address_r",
      "type": "text",
      "description": "The state field of the user's address."
    },
    "zip": {
      "visibility": "private",
      "scope": "address_r",
      "type": "text",
      "description": "The zip code field of the user's address."
    },
    "country_id": {
      "visibility": "private",
      "scope": "address_r",
      "type": "int",
      "description": "The country's numeric ID."
    },
    "country_name": {
      "visibility": "private",
      "scope": "address_r",
      "type": "string",
      "description": "The name of the user's country"
    }
  },
  "associations": {
    "Country": {
      "visibility": "private",
      "scope": "address_r",
      "type": "Country",
      "description": "The full Country record for the user's address."
    },
    "User": {
      "visibility": "private",
      "scope": "address_r",
      "type": "User",
      "description": "The full User record whom entered this address."
    }
  },
  "methods": {
    "findAllUserAddresses": {
      "description": "Retrieves a set of UserAddress objects associated to a User.",
      "method": "GET",
      "uri": "/users/:user_id/addresses",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "address_r"
    },
    "createUserAddress": {
      "description": "Creates a new UserAddress. Note: state is required when the country is US, Canada, or Australia. See section above about valid codes.",
      "method": "POST",
      "uri": "/users/:user_id/addresses/",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "name": {
          "required": true,
          "default": "",
          "type": "string"
        },
        "first_line": {
          "required": true,
          "default": "",
          "type": "string"
        },
        "second_line": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "city": {
          "required": true,
          "default": "",
          "type": "string"
        },
        "state": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "zip": {
          "required": true,
          "default": "",
          "type": "string"
        },
        "country_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "address_w"
    },
    "getUserAddress": {
      "description": "Retrieves a UserAddress by id.",
      "method": "GET",
      "uri": "/users/:user_id/addresses/:user_address_id",
      "parameters": {
        "user_address_id": {
          "required": true,
          "default": "",
          "type": "array(int)"
        }
      },
      "oauth": true,
      "scope": "address_r"
    },
    "deleteUserAddress": {
      "description": "Deletes the UserAddress with the given id.",
      "method": "DELETE",
      "uri": "/users/:user_id/addresses/:user_address_id",
      "parameters": {
        "user_address_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "address_w"
    }
  }
},
"UserProfile": {
  "description": "Represents a user's public profile. Generally, this is the information available for a member as \"Public Profile\" on Etsy.comAs of March 28, 2011, the \"User\" and \"Shops\" associations of UserProfile no longer exist in the API. Instead, query the User resource directly, using the Etsy member's login name, and/or use the Shops association of User.",
  "fields": {
    "user_profile_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of the user profile.\n                            DEPRECATED: Do not use"
    },
    "user_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of the user this profile corresponds to."
    },
    "login_name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The login name of the user that owns this profile."
    },
    "bio": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The bio of the user."
    },
    "gender": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The gender of the user."
    },
    "birth_month": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The birth month of the user."
    },
    "birth_day": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The birth day of the user."
    },
    "birth_year": {
      "visibility": "private",
      "scope": "profile_r",
      "type": "string",
      "description": "The birth year of the user."
    },
    "join_tsz": {
      "visibility": "public",
      "scope": "none",
      "type": "float",
      "description": "The date and time the user was created, in epoch seconds."
    },
    "materials": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "A list of the user's favorite materials."
    },
    "country_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of the user's country."
    },
    "region": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The user's region (free-form text)"
    },
    "city": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The user's city (free-form text)"
    },
    "location": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The user's location (self-supplied, free-form text).\n                            DEPRECATED: Do not use."
    },
    "avatar_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of this user's avatar image."
    },
    "lat": {
      "visibility": "private",
      "scope": "profile_r",
      "type": "float",
      "description": "The latitude of the user."
    },
    "lon": {
      "visibility": "private",
      "scope": "profile_r",
      "type": "float",
      "description": "The longitude of the user."
    },
    "transaction_buy_count": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The number of bought items for this user."
    },
    "transaction_sold_count": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The number of sold transactions for this user."
    },
    "is_seller": {
      "visibility": "public",
      "scope": "none",
      "type": "boolean",
      "description": "If the user is a seller or not. Value true if user is a seller."
    },
    "image_url_75x75": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The URL to the user's avatar image; dimensions 75px square."
    },
    "first_name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The first name of the user."
    },
    "last_name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The last name of the user."
    }
  },
  "associations": {
    "Country": {
      "visibility": "public",
      "scope": "none",
      "type": "Country",
      "description": "The country in which the user lives."
    }
  },
  "methods": {
    "findUserProfile": {
      "description": "Returns the UserProfile object associated with a User.",
      "method": "GET",
      "uri": "/users/:user_id/profile",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        }
      },
      "oauth": false,
      "scope": "none"
    },
    "updateUserProfile": {
      "description": "Updates the UserProfile object associated with a User. Notes:Name changes are subject to admin review and therefore unavailable via the API.Materials must be provided as a period-separated list of ASCII words.",
      "method": "PUT",
      "uri": "/users/:user_id/profile",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "bio": {
          "required": false,
          "default": "",
          "type": "text"
        },
        "gender": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "birth_month": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "birth_day": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "birth_year": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "materials": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "country_id": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "region": {
          "required": false,
          "default": "",
          "type": "string"
        },
        "city": {
          "required": false,
          "default": "",
          "type": "string"
        }
      },
      "oauth": true,
      "scope": "profile_w"
    }
  }
},
"Variations_Option": {
  "description": "Represents an available listing variation option — e.g. Small for the Size property. Options are often provided as a collection of the Variations_Property resource.Variations Custom Property Names and Variations Option Names follow the validation rules for \nListing title with the following additions:For full documentation on working with Listing Variations, see Working with Variations.This resource has no associations.This resource has no methods.",
  "fields": {
    "value_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of the option"
    },
    "value": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The normalized value of the option"
    },
    "formatted_value": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The formatted/translated value of the option"
    },
    "is_available": {
      "visibility": "public",
      "scope": "none",
      "type": "boolean",
      "description": "True if the option is available for purchase"
    },
    "price_diff": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The additional price, if any, for this option above the Listing's base price. (NOTE: Unavailable options may have negative values.)"
    },
    "price": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The full price of this option, added to the Listing's base price. (NOTE: Unavailable options may have a price that is lower than the Listing's base price, which is based on the lowest available option price.)"
    }
  },
  "associations": {},
  "methods": {}
},
"Variations_Property": {
  "description": "Represents a property from a list of default or seller-defined properties to describe a variation of a listing. In addition to a default\nlist including Size, Color, Finish, Dimensions and others, sellers may specify custom properties to more\naptly describe their listings. When available, properties are returned as part of a Listing as the Variations\nassociation.Although a Listing can be assigned any two properties from \nthe list of available Variations properties, some properties and values are suggested for Listings in particular categories.  The\nVariations_PropertySet resource can be used to access suggestions for a category.Sellers are given their\nchoice of two custom properties, which can be used for any purpose. When adding custom Variations, be sure to specify a map of\nproperty IDs and names using the custom_property_names field. NOTE: Using custom properties in place\nof predefined properties (Size, Color, Width, etc.) may be harmful to a Listing's search relevancy at a later date. Custom properties should\nonly be used when no other property is suitable.Optional qualifying properties should be specified when appropriate, and may be used in search at a later date. To determine the appropriate\nqualifiers and their values, see the Variations_PropertySet resource. (NOTE: If the\nrecipient_id qualifier is specified here, it will overwrite the value of recipient\non the Listing.  When in doubt, the value appropriate to added Variations should be preferred.)Although a Listing can be assigned any two properties from \nthe list of available Variations properties, some properties and values are suggested for Listings in particular categories.  The\nVariations_PropertySet resource can be used to access suggestions for a category.Sellers are given their\nchoice of two custom properties, which can be used for any purpose. When adding custom Variations, be sure to specify a map of\nproperty IDs and names using the custom_property_names field. NOTE: Using custom properties in place\nof predefined properties (Size, Color, Width, etc.) may be harmful to a Listing's search relevancy at a later date. Custom properties should\nonly be used when no other property is suitable.Optional qualifying properties should be specified when appropriate, and may be used in search at a later date. To determine the appropriate\nqualifiers and their values, see the Variations_PropertySet resource. (NOTE: If the\nrecipient_id qualifier is specified here, it will overwrite the value of recipient\non the Listing.  When in doubt, the value appropriate to added Variations should be preferred.)Variations Custom Property Names and Variations Option Names follow the validation rules for \nListing title with the following additions:For full documentation on working with Listing Variations, see Working with Variations.This resource has no associations.",
  "fields": {
    "property_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "This numeric ID of this property"
    },
    "formatted_name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "This translated name of this property"
    },
    "options": {
      "visibility": "public",
      "scope": "none",
      "type": "array(Variations_Option)",
      "description": "Available options for this property"
    }
  },
  "associations": {},
  "methods": {
    "getListingVariations": {
      "description": "Get the listing variations available for a listing.",
      "method": "GET",
      "uri": "/listings/:listing_id/variations",
      "parameters": {
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "listings_r"
    },
    "createListingVariations": {
      "description": "Update all of the listing variations available for a listing; optionally set custom property names and property qualifiers. Expects a JSON array with a collection of objects of the form: [{\"property_id\":200, \"value\":\"Black\"}, {\"property_id\":200, \"value\":\"White\"}]",
      "method": "POST",
      "uri": "/listings/:listing_id/variations",
      "parameters": {
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "variations": {
          "required": true,
          "default": "",
          "type": "array(listing_variation)"
        },
        "custom_property_names": {
          "required": false,
          "default": "",
          "type": "map(int, string)"
        },
        "recipient_id": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "sizing_scale": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "weight_scale": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "height_scale": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "length_scale": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "width_scale": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "diameter_scale": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "dimensions_scale": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    },
    "updateListingVariations": {
      "description": "Update all of the listing variations available for a listing. Expects a JSON array with a collection of objects of the form: [{\"property_id\":200, \"value\":\"Black\"}, {\"property_id\":200, \"value\":\"White\"}]",
      "method": "PUT",
      "uri": "/listings/:listing_id/variations",
      "parameters": {
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "variations": {
          "required": true,
          "default": "",
          "type": "array(listing_variation)"
        },
        "custom_property_names": {
          "required": false,
          "default": "",
          "type": "map(int, string)"
        },
        "recipient_id": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "sizing_scale": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "weight_scale": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "height_scale": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "length_scale": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "width_scale": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "diameter_scale": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "dimensions_scale": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    },
    "createListingVariation": {
      "description": "Add a new listing variation for a listing.",
      "method": "POST",
      "uri": "/listings/:listing_id/variations/:property_id",
      "parameters": {
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "property_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "value": {
          "required": true,
          "default": "",
          "type": "string"
        },
        "is_available": {
          "required": false,
          "default": "1",
          "type": "boolean"
        },
        "price": {
          "required": false,
          "default": "",
          "type": "float"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    },
    "updateListingVariation": {
      "description": "Update a listing variation for a listing.",
      "method": "PUT",
      "uri": "/listings/:listing_id/variations/:property_id",
      "parameters": {
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "property_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "value": {
          "required": true,
          "default": "",
          "type": "string"
        },
        "is_available": {
          "required": true,
          "default": "",
          "type": "boolean"
        },
        "price": {
          "required": false,
          "default": "",
          "type": "float"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    },
    "deleteListingVariation": {
      "description": "Remove a listing variation for a listing.",
      "method": "DELETE",
      "uri": "/listings/:listing_id/variations/:property_id",
      "parameters": {
        "listing_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "property_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "value": {
          "required": true,
          "default": "",
          "type": "string"
        }
      },
      "oauth": true,
      "scope": "listings_w"
    }
  }
},
"BillingOverview": {
  "description": "A user's account balance on Etsy.This resource has no associations.",
  "fields": {
    "is_overdue": {
      "visibility": "private",
      "scope": "billing_r",
      "type": "boolean",
      "description": "True if the user has an overdue balance."
    },
    "currency_code": {
      "visibility": "private",
      "scope": "billing_r",
      "type": "string",
      "description": "The currency unit in which the user is billed."
    },
    "overdue_balance": {
      "visibility": "private",
      "scope": "billing_r",
      "type": "float",
      "description": "The total overdue balance owed by the user."
    },
    "balance_due": {
      "visibility": "private",
      "scope": "billing_r",
      "type": "float",
      "description": "The total amount currently due for payment (including any overdue balance.)"
    },
    "total_balance": {
      "visibility": "private",
      "scope": "billing_r",
      "type": "float",
      "description": "The total amount owed by the user (including fees that are not yet due for payment.)"
    },
    "date_due": {
      "visibility": "private",
      "scope": "billing_r",
      "type": "epoch",
      "description": "The date by which the user's balance due must be paid."
    },
    "date_overdue": {
      "visibility": "private",
      "scope": "billing_r",
      "type": "epoch",
      "description": "The date on which the user's balance became overdue.\n                            DEPRECATED: do not use - always returns 0"
    }
  },
  "associations": {},
  "methods": {
    "getUserBillingOverview": {
      "description": "Retrieves the user's current balance.",
      "method": "GET",
      "uri": "/users/:user_id/billing/overview",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        }
      },
      "oauth": true,
      "scope": "billing_r"
    }
  }
},
"BillCharge": {
  "description": "Represents a charge to an Etsy member's account.The type field of BillCharge indicates what the charge is:This resource has no associations.",
  "fields": {
    "bill_charge_id": {
      "visibility": "private",
      "scope": "billing_r",
      "type": "int",
      "description": "The numeric ID for this bill charge record."
    },
    "creation_tsz": {
      "visibility": "private",
      "scope": "billing_r",
      "type": "float",
      "description": "Creation time, in epoch seconds."
    },
    "type": {
      "visibility": "private",
      "scope": "billing_r",
      "type": "string",
      "description": "The name of the type of charge."
    },
    "type_id": {
      "visibility": "private",
      "scope": "billing_r",
      "type": "int",
      "description": "The Listing, Transaction or Shipping Label ID to which the charge applies."
    },
    "user_id": {
      "visibility": "private",
      "scope": "billing_r",
      "type": "int",
      "description": "The user's numeric ID."
    },
    "amount": {
      "visibility": "private",
      "scope": "billing_r",
      "type": "float",
      "description": "The amount charged."
    },
    "currency_code": {
      "visibility": "private",
      "scope": "billing_r",
      "type": "string",
      "description": "The currency of the charge."
    },
    "creation_year": {
      "visibility": "private",
      "scope": "billing_r",
      "type": "int",
      "description": "Year that the charge was created."
    },
    "creation_month": {
      "visibility": "private",
      "scope": "billing_r",
      "type": "int",
      "description": "Month that the charge was created."
    },
    "last_modified_tsz": {
      "visibility": "private",
      "scope": "billing_r",
      "type": "float",
      "description": "Time when charge was last modified."
    }
  },
  "associations": {},
  "methods": {
    "getUserChargesMetadata": {
      "description": "Metadata for the set of BillCharges objects associated to a User",
      "method": "GET",
      "uri": "/users/:user_id/charges/meta",
      "parameters": {
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        }
      },
      "oauth": true,
      "scope": "billing_r"
    },
    "findAllUserCharges": {
      "description": "Retrieves a set of BillCharge objects associated to a User. NOTE: from 8/8/12 the min_created and max_created arguments will be mandatory and can be no more than 31 days apart.",
      "method": "GET",
      "uri": "/users/:user_id/charges",
      "parameters": {
        "limit": {
          "required": false,
          "default": "25",
          "type": "int"
        },
        "offset": {
          "required": false,
          "default": "0",
          "type": "int"
        },
        "page": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "user_id": {
          "required": true,
          "default": "",
          "type": "user_id_or_name"
        },
        "sort_order": {
          "required": false,
          "default": "up",
          "type": "enum(up, down)"
        },
        "min_created": {
          "required": false,
          "default": "",
          "type": "epoch"
        },
        "max_created": {
          "required": false,
          "default": "",
          "type": "epoch"
        }
      },
      "oauth": true,
      "scope": "billing_r"
    }
  }
},
"Variations_PropertyQualifier": {
  "description": "A component of the larger Variations_PropertySet data structure, a property qualifier is a recursive data structure describing increasing specificity of a property. For example, for a listing in the Clothing: Pants category, the Size property is further qualified by the Recipient and Scale qualifying properties. A property qualifier describes these dependencies.For full documentation on working with Listing Variations, see Working with Variations.This resource has no associations.This resource has no methods.",
  "fields": {
    "property_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of this property"
    },
    "options": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "An array of numeric IDs of available options for this property qualifier"
    },
    "results": {
      "visibility": "public",
      "scope": "none",
      "type": "map(string, Variations_PropertyQualifier)",
      "description": "Recursive qualifiers representative of inreased property specificity (Keys are numeric strings)"
    },
    "aliases": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Option values listed here share qualifier settings with other options (Keys are numeric strings)"
    }
  },
  "associations": {},
  "methods": {}
},
"Variations_PropertySet": {
  "description": "When managing variations of a listing, a property set is a data structure that defines how a property is specified for a given category. For instance, the Size property requires varying degrees of specificity when describing Clothing: Pants as opposed to Jewelery: Rings; the additional specificity allows us to suggest more appropriate options — e.g. men’s UK pant sizes — for a given property. Properties and Property Sets describes in further detail how to interpret this data.Although a Listing can be assigned any two properties from \nthe list of available Variations properties, some properties and values are suggested for Listings in particular categories.  The\nVariations_PropertySet resource can be used to access suggestions for a category.Sellers are given their\nchoice of two custom properties, which can be used for any purpose. When adding custom Variations, be sure to specify a map of\nproperty IDs and names using the custom_property_names field. NOTE: Using custom properties in place\nof predefined properties (Size, Color, Width, etc.) may be harmful to a Listing's search relevancy at a later date. Custom properties should\nonly be used when no other property is suitable.Optional qualifying properties should be specified when appropriate, and may be used in search at a later date. To determine the appropriate\nqualifiers and their values, see the Variations_PropertySet resource. (NOTE: If the\nrecipient_id qualifier is specified here, it will overwrite the value of recipient\non the Listing.  When in doubt, the value appropriate to added Variations should be preferred.)For full documentation on working with Listing Variations, see Working with Variations.This resource has no associations.",
  "fields": {
    "property_set_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "Numeric ID of this property set"
    },
    "properties": {
      "visibility": "public",
      "scope": "none",
      "type": "map(int, Variations_PropertySetProperty)",
      "description": "Dictionary of properties that are available as variations"
    },
    "qualifying_properties": {
      "visibility": "public",
      "scope": "none",
      "type": "map(int, Variations_PropertySetProperty)",
      "description": "Dictionary of properties that are used to add specificity to one or more variation properties"
    },
    "options": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "Dictionary of available property options for any of the qualifying properties"
    },
    "qualifiers": {
      "visibility": "public",
      "scope": "none",
      "type": "map(int, array(Variations_PropertyQualifier))",
      "description": "Recursive data-structure indicating the property options available for qualifying_properties, and the nested qualifiers available for each option"
    }
  },
  "associations": {},
  "methods": {
    "findPropertySet": {
      "description": "Find the property set for the category id",
      "method": "GET",
      "uri": "/property_sets",
      "parameters": {
        "category_id": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    }
  }
},
"Variations_PropertySetOption": {
  "description": "Represents a suggested option value for a listing on Etsy, dependent on the listing's\ncategory, and one or more qualified properties (size scale, recipient, etc.)Although Etsy listings can contain any value for any available property, it's recommended\nto use these suggested options whenever possible.  They may be integrated into Etsy search\nat a later date.For full documentation on working with Listing Variations, see Working with Variations.This resource has no associations.",
  "fields": {
    "property_option_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The property option's unique ID"
    },
    "name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "property option name"
    },
    "formatted_name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "property option name, formatted for display"
    }
  },
  "associations": {},
  "methods": {
    "findAllSuggestedPropertyOptions": {
      "description": "Finds all suggested property options for a given property.",
      "method": "GET",
      "uri": "/property_options/suggested",
      "parameters": {
        "property_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "category_id": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "recipient_id": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "sizing_scale": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "weight_scale": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "height_scale": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "length_scale": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "width_scale": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "diameter_scale": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "dimensions_scale": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    }
  }
},
"Variations_PropertySetProperty": {
  "description": "Represents a suggested Variations property as part of a set of suggested\nproperties and options, dependent on one or more qualifiers (size scale, recipient, etc.)\nFor more information, see Variations_PropertySet.Although Etsy listings can contain any value for any available property, it's recommended\nto use these suggested properties whenever possible.  They may be integrated into Etsy search\nat a later date.For full documentation on working with Listing Variations, see Working with Variations.This resource has no associations.This resource has no methods.",
  "fields": {
    "property_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "This numeric ID of this property"
    },
    "name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The name of this property"
    },
    "input_name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Suggested form field name"
    },
    "label": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Descriptive text label for form input"
    },
    "param": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Specifies the qualifier parameter when requesting suggested options for a property"
    },
    "default_option": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Initial option value for form input"
    },
    "description": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Text description of property"
    },
    "is_custom": {
      "visibility": "public",
      "scope": "none",
      "type": "boolean",
      "description": "True if this property is Custom 1 or Custom 2"
    },
    "title": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Property name, formatted for display"
    }
  },
  "associations": {},
  "methods": {}
},
"Variations_PropertySetOptionModifier": {
  "description": "Represents rules for display of Variations property options on Etsy, dependent on one\nor more qualifiers (size scale, recipient, etc.)  The resource specified text that should\ncome before and after the option.\n\nWhen accessing existing Variations_Option records  on Etsy listings, the field\nformatted_value\nwill already have these display rules applied.  This resource is only useful when adding new Variation options to listings, in\norder to preview the options as they will appear once saved.For full documentation on working with Listing Variations, see Working with Variations.This resource has no associations.",
  "fields": {
    "prefix": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Indicates text that should be prepended to property options"
    },
    "suffix": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "Indicates text that should be appended to property options"
    }
  },
  "associations": {},
  "methods": {
    "getPropertyOptionModifier": {
      "description": "Add a value for a given property.",
      "method": "GET",
      "uri": "/property_options/modifiers",
      "parameters": {
        "property_id": {
          "required": true,
          "default": "",
          "type": "int"
        },
        "category_id": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "recipient_id": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "sizing_scale": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "weight_scale": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "height_scale": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "length_scale": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "width_scale": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "diameter_scale": {
          "required": false,
          "default": "",
          "type": "int"
        },
        "dimensions_scale": {
          "required": false,
          "default": "",
          "type": "int"
        }
      },
      "oauth": false,
      "scope": "none"
    }
  }
},
"Variations_SelectedProperty": {
  "description": "A data structure representing a buyer's selected variation for a listing. Returned as a collection as a property on CartListing and Transaction.When in the context of a CartListing, special attention should be paid to the is_valid property. This will be false in the event that the variation has been changed or removed since the listing was added to the cart. Additionally, the purchase_state property of the parent CartListing will have a value of edited to signal this state. In this case the listing needs to be removed and re-added to the cart with a valid variation.For full documentation on working with Listing Variations, see Working with Variations.This resource has no associations.This resource has no methods.",
  "fields": {
    "property_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of the selected property"
    },
    "value_id": {
      "visibility": "public",
      "scope": "none",
      "type": "int",
      "description": "The numeric ID of selected value"
    },
    "formatted_name": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The formatted/translated name of the selected property"
    },
    "formatted_value": {
      "visibility": "public",
      "scope": "none",
      "type": "string",
      "description": "The formatted/translated name of the selected value"
    },
    "is_valid": {
      "visibility": "public",
      "scope": "none",
      "type": "boolean",
      "description": "Whether the selected variation value is a valid option for this property. NOTE: This field will not be present on Transactions."
    }
  },
  "associations": {},
  "methods": {}
}
}
